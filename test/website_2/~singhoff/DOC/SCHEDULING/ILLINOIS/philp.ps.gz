%!PS-Adobe-2.0
%%Creator: dvips 5.490 Copyright 1986, 1992 Radical Eye Software
%%Title: lcn96.dvi
%%Pages: 10 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic Helvetica-Bold
%%EndComments
%DVIPSCommandLine: dvips -f lcn96.dvi
%%BeginProcSet: tex.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/FV}{/RV}ifelse load def pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE
S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76 div
/hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley
0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{pop
product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4 getinterval
(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale
rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex
ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /FV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{-3 M}
B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /w{0
rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}
B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2 index
/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll exec 0 exch 5
-1 roll VResolution Resolution div mul neg 0 0]/Metrics exch def dict begin
Encoding{exch dup type /integertype ne{pop pop 1 sub dup 0 le{pop}{[}ifelse}{
FontMatrix 0 get div Metrics 0 get div def}ifelse}forall Metrics /Metrics
currentdict end def[2 index currentdict end definefont 3 -1 roll makefont
/setfont load]cvx def}def /ObliqueSlant{dup sin S cos div neg}B /SlantFont{4
index mul add}def /ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding
exch def}def end
%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 @start /Fa 134[17
1[25 1[19 10 15 15 1[19 19 19 27 10 17 1[10 19 19 10 17 19
17 19 19 12[21 19 23 27 23 1[25 31 2[17 12 27 27 23 23 1[25
1[23 7[19 19 4[19 19 19 3[12 9 4[12 39[{}44 37.500000 /Times-Italic
rf /Fb 78[19 1[21 21 51[17 19 1[27 19 19 10 15 12 19 19 19
19 29 10 19 10 10 19 19 12 17 19 17 19 17 3[12 1[12 23 1[27
35 27 1[23 21 25 1[21 27 27 33 23 27 15 12 27 27 21 23 27 25
1[27 6[10 19 19 19 19 19 19 19 19 19 19 10 9 12 9 2[12 12 40[{}69
37.500000 /Times-Roman rf /Fc 175[25 80[{}1 41.666668 /Times-Bold
rf /Fd 2 49 df<FFFFC0FFFFC012027D871A>0 D<040E0E1C1C1C38383070706060C0C0070F7F
8F0A>48 D E /Fe 3 50 df<FFFFFF80FFFFFF8019027D8A20>0 D<000001800000078000001E
00000078000001E00000078000001E00000078000001E00000078000001E00000078000000E000
0000780000001E0000000780000001E0000000780000001E0000000780000001E0000000780000
001E00000007800000018000000000000000000000000000000000000000000000000000000000
7FFFFF00FFFFFF8019227D9920>20 D<07E0003F000FF800F180183E018040200F030020400784
00104003CC00108001D800088000F000088000F00008800078000880007800088000DC00084001
9E001040010F00102006078020100C03E0C00C7800FF8007E0003F0025127E912A>49
D E /Ff 1 81 df<FFFFFFFFE0FFFFFFFFF07000001FF078000001F03C000000781C000000180E
0000000C0F000000040700000004038000000203C000000001E000000000E00000000070000000
00780000000038000000001C000000001E000000000F0000000007000000000380000000038000
00000300000000070000000006000000000C000000001800000000380000000030000000006000
000000C000000001C00000000180000002030000000406000000040E0000000C0C000000181800
00007830000001F07000001FF07FFFFFFFF0FFFFFFFFE0272A7E7F2C>80
D E /Fg 1 44 df<006000006000006000006000006000006000006000006000006000006000FF
FFF0FFFFF000600000600000600000600000600000600000600000600000600000600014167E91
19>43 D E /Fh 81[25 56[25 15 18 20 1[25 23 25 38 13 25 1[13
25 23 15 20 25 20 1[23 12[30 25 2[28 11[33 2[33 12[23 23 23
23 2[11 15 45[{}30 45.833332 /Times-Bold rf /Fi 133[21 23 23
32 23 25 14 23 16 25 25 25 25 37 12 23 1[12 25 25 14 23 25
23 25 23 9[39 2[25 28 30 1[28 9[25 2[30 30 30 10[23 23 23 23
23 23 23 1[12 14 12 2[14 14 40[{}46 41.666668 /Helvetica-Bold
rf /Fj 11 122 df<40E06020202040408003097D820A>59 D<07800C4010E031C06000600060
00C000C0004020404021801E000B0D7E8C0F>99 D<007C000C0018001800180018003007B00C70
10703060606060606060C0C0C0C8C0C841C862D03C700E147E9311>I<07800C40102030406040
7F8060004000C0004020604021801E000B0D7E8C10>I<06070600000000384C4C8C9818183032
6262643808147F930C>105 D<0060007000600000000000000000038004C0046008C008C000C0
00C0018001800180018003000300030003006600E600CC0078000C1A81930E>I<7C0C18181818
3030303060606060C0D0D0D0D06006147E930A>108 D<31E05A704C709C609800180018003000
300030003000600060000C0D7F8C0F>114 D<0700188019C0318038001E000F0003804180E180
C10082007C000A0D7E8C10>I<02000600060006000C00FF800C000C0018001800180018003000
31003100320032001C0009127F910D>I<38184C184C188C3098301830183030603060306030E0
11C00EC000C00080E180E30046003C000D137F8C11>121 D E /Fk 134[17
1[24 17 17 9 13 11 1[17 17 17 26 9 17 1[9 17 17 1[15 17 15
17 15 12[20 18 10[24 1[18 20 24 21[8 1[8 44[{}29 33.333332
/Times-Roman rf /Fl 206[12 49[{}1 25.000000 /Times-Roman rf
/Fm 200[15 15 15 15 15 15 15 15 48[{}8 29.166668 /Times-Roman
rf /Fn 19 120 df<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C830C>I<
0000038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F0000
003C000000F0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003
C0000000F00000003C0000000F000000038019187D9520>I<E0000000780000001E0000000780
000001E0000000780000001E0000000780000001E0000000780000001E00000007800000078000
001E00000078000001E00000078000001E00000078000001E00000078000001E00000078000000
E000000019187D9520>62 D<0001F808000E061800380138006000F001C0007003800070070000
300F0000200E0000201C0000203C0000203C000000780000007800000078000000F0000000F000
0000F0000000F0000000F0000100F0000100F0000100700002007000020030000400380008001C
0010000E0060000701800000FE00001D1E7E9C1E>67 D<01FE0000FF003E0000F0002E0001E000
2E0002E0002E0002E0002E0004E0004E0009C0004E0009C000470011C000470011C00087002380
00870043800087004380008700838001070107000107010700010382070001038207000203840E
000203880E000203880E000203900E000403A01C000403A01C000401C01C000C01C01C001C0180
3C00FF8103FF80281C7E9B28>77 D<01FFFF00003C03C0003800E0003800F00038007000380070
007000F0007000F0007000F0007000E000E001E000E003C000E0078000E01E0001FFF00001C000
0001C0000001C00000038000000380000003800000038000000700000007000000070000000700
00000F000000FFE000001C1C7E9B1B>80 D<000FC100303300400F008006018006030006030006
06000406000407000007000007800003F00001FF0000FFC0003FE00003E00000F0000070000030
0000302000302000306000606000606000C0600080F00300CC060083F800181E7E9C19>83
D<7FF03FE00F0007000E0006000E0004000E0004000E0004001C0008001C0008001C0008001C00
08003800100038001000380010003800100070002000700020007000200070002000E0004000E0
004000E0004000E0008000E0008000E00100006002000060040000300800001830000007C00000
1B1D7D9B1C>85 D<01F0030C0E0C1C1E383C301870007000E000E000E000E000E000E004600860
1030601F800F127E9112>99 D<0007E00000E00000E00001C00001C00001C00001C00003800003
8000038000038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C
00E01C00E03880E03880E038806078803199001E0E00131D7E9C16>I<0007000F000F00060000
000000000000000000000070009C010C020C021C041C001C001C00380038003800380070007000
70007000E000E000E000E001C061C0F180F300E6007C001024809B11>106
D<0FC00001C00001C0000380000380000380000380000700000700000700000700000E07000E18
800E21C00E23C01C47801C83001D00001E00003F800039C00038E00038E00070E10070E10070E1
0070E200E06200603C00121D7E9C16>I<381F81F04E20C6184640E81C4680F01C8F00F01C8E00
E01C0E00E01C0E00E01C1C01C0381C01C0381C01C0381C01C0703803807138038071380380E138
0380E2700700643003003820127E9124>109 D<381F004E61804681C04701C08F01C08E01C00E
01C00E01C01C03801C03801C03801C0700380710380710380E10380E2070064030038014127E91
19>I<07078009C86008D03008E03011C03011C03801C03801C038038070038070038070038060
0700E00700C00701800783000E86000E78000E00000E00001C00001C00001C00001C00003C0000
FF8000151A819115>112 D<01C206260C1E181E381C301C701C701CE038E038E038E038E070E0
70E07060F023E01CE000E000E001C001C001C001C003C01FF80F1A7E9113>I<00C001C001C001
C00380038003800380FFF00700070007000E000E000E000E001C001C001C001C00382038203840
384018800F000C1A80990F>116 D<1C00C0802701C1C04701C1C04701C0C08703804087038040
0E0380400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04
000E13080003E1F0001A127E911E>119 D E /Fo 80[23 23 51[18 21
21 30 21 21 12 16 14 21 21 21 21 32 12 21 12 12 21 21 14 18
21 18 21 18 3[14 1[14 1[30 1[39 30 30 25 23 28 1[23 30 30 37
25 2[14 30 30 23 25 30 28 28 30 5[12 12 21 21 21 21 21 21 21
21 21 21 1[10 14 10 23 1[14 14 14 1[35 37[{}71 41.666668 /Times-Roman
rf /Fp 6 94 df<004000800100020006000C000C0018001800300030007000600060006000E0
00E000E000E000E000E000E000E000E000E000E000E00060006000600070003000300018001800
0C000C00060002000100008000400A2A7D9E10>40 D<800040002000100018000C000C00060006
0003000300038001800180018001C001C001C001C001C001C001C001C001C001C001C001C00180
01800180038003000300060006000C000C00180010002000400080000A2A7E9E10>I<00060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
000006000000060000FFFFFFE0FFFFFFE000060000000600000006000000060000000600000006
0000000600000006000000060000000600000006000000060000000600001B1C7E9720>43
D<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91 D<FEFE060606060606060606
06060606060606060606060606060606060606060606060606060606FEFE0729809E0C>93
D E /Fq 81[21 51[16 18 18 28 18 21 12 16 16 21 21 21 21 30
12 18 1[12 21 21 12 18 21 18 21 21 9[35 2[23 21 6[23 2[14 2[25
1[30 18[21 2[10 14 10 2[14 14 40[{}39 41.666668 /Times-Italic
rf /Fr 81[28 56[28 17 19 22 1[28 25 28 41 14 28 1[14 28 25
17 22 28 22 28 25 12[33 28 36 1[30 6[19 2[30 1[36 36 1[36 11[25
25 25 25 25 2[12 17 12 44[{}37 50.000000 /Times-Bold rf /Fs
2 104 df<000F0038007000E001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C0038007001E00F0001E000700038001C001C001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C000E000700038000F10317CA419>102
D<F0001E000700038001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C000E000700038000F0038007000E001C001C001C001C001C001C001C001C001C001C001
C001C001C001C001C001C001C0038007001E00F00010317CA419>I E /Ft
134[25 2[25 25 14 19 17 1[25 25 25 39 14 25 14 14 25 25 17
22 25 22 25 22 9[47 1[36 1[28 33 1[28 1[36 1[30 36 19 17 4[36
33 2[46 7[25 1[25 4[25 25 1[12 17 12 44[{}42 50.000000 /Times-Roman
rf /Fu 81[32 54[42 1[32 19 23 26 2[29 32 48 16 32 1[16 32 29
19 26 32 26 1[29 10[42 1[39 32 42 1[36 1[42 55 10[39 20[19
45[{}28 58.333336 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
0 bop 249 187 a Fu(Scheduling)16 b(and)f(Buffer)g(Management)h(for)e
(Soft-Real-T)o(ime)416 262 y(VBR)g(T)l(raf\256c)h(in)g(Packet-Switched)g
(Networks)456 420 y Ft(Ian)d(R.)h(Philp,)f(Klara)g(Nahrstedt,)h(and)f(Jane)h
(W)-5 b(.S.)14 b(Liu)606 478 y(Department)e(of)g(Computer)f(Science)498
536 y(University)h(of)g(Illinois)f(at)i(Urbana-Champaign,)762
594 y(Urbana,)g(IL)f(61801)599 652 y Fs(f)p Ft(philp,klara,janeliu)p
Fs(g)p Ft(@cs.uiuc.edu)308 827 y Fr(Abstract)-41 929 y Fq(This)7
b(paper)i(describes)g(four)e(scheduling)g(algorithms)g(and)g(two)-91
979 y(packet-dr)n(opping)13 b(algorithms)e(for)j(transmitting)d(soft-r)n
(eal-time)-91 1029 y(variable-bit-rate)c(traf)o(\256c)g(in)f(a)g(packet-swit)
o(ched)h(network.)k(Simu-)-91 1079 y(lation)c(r)n(esults)j(show)f(that)f(the)
i(\256rst-come-\256rst-serve)g(algorithm,)-91 1129 y(which)i(is)h(equivalent)
f(to)g(the)h(earliest-deadline-\256rst)d(algorithm)-91 1178
y(when)e(all)f(packets)i(have)g(equal)f(r)n(elative)h(deadlines,)f
(outperforms)-91 1228 y(the)16 b(timed-token)g(algorithm)e(as)i(well)g(as)h
(two)e(other)i(r)n(eal-time)-91 1278 y(scheduling)11 b(algorithms.)21
b(W)l(e)12 b(also)g(simulated)f(the)i(last-in-\256rst-)-91
1328 y(discar)n(d)e(\(LIFD\))f(algorithm)f(as)i(well)f(as)g(a)h(mor)n(e)h
(complex)f Fp(\()p Fo(1)p Fn(;)c(k)q Fp(\))-91 1378 y Fq(packet-dr)n(opping)j
(algorithm)g(which,)i(for)f(each)h(str)n(eam,)h(tries)f(to)-91
1428 y(dr)n(op)h(no)g(mor)n(e)g(than)f(1)h(packet)h(in)e(any)h(sequence)i(of)
d Fn(k)i Fq(packets.)-91 1477 y(W)l(e)e(found)e(that)g(although)f(the)i
Fp(\()p Fo(1)p Fn(;)c(k)q Fp(\))k Fq(dr)n(opping)g(algorithm)e(does)-91
1527 y(signi\256cantly)i(r)n(educe)k(the)e(failur)n(e)f(rate,)i(the)f(same)h
(r)n(eduction)f(in)-91 1577 y(this)i(failur)n(e)f(rate)i(can)g(be)g(achieved)
g(by)g(slightly)e(lowering)g(the)-91 1627 y(network)e(utilization)d(and)j
(using)g(the)g(simpler)g(LIFD)h(algorithm.)-91 1850 y Fr(1.)g(Intr)o
(oduction)-41 1965 y Fo(It)21 b(is)h(widely)f(believed)h(that)g
(packet-switched)g(networks,)-91 2015 y(through)13 b(the)i(use)g(of)f
(admission)h(control)e(and)i(packet)h(schedul-)-91 2065 y(ing,)9
b(will)g(be)h(able)g(to)g(provide)e(performance-ef)o(fective)k(and)d(cost-)
-91 2115 y(ef)o(\256cient)15 b(service)h(to)e(a)i(wide)f(variety)f(of)h(traf)
o(\256c)g(with)f(dif)o(ferent)-91 2164 y(performance)d(and)g
(quality-of-service)e(requirements.)17 b(W)m(e)11 b(clas-)-91
2214 y(sify)k(the)g(traf)o(\256c)h(into)f(three)h(categories:)25
b(hard-real-time,)17 b(soft-)-91 2264 y(real-time,)h(and)f(best-ef)o(fort.)34
b(Hard-real-time)16 b(traf)o(\256c)h(requires)-91 2314 y(strict)d(guarantees)
i(on)e(delay)h(and)g(generally)g(must)g(be)g(lossless.)-91
2364 y(Soft-real-time)c(traf)o(\256c)h(also)g(has)h(delay)f(bounds)f(that)g
(need)i(to)e(be)-91 2413 y(met,)f(but)d(these)i(bounds)f(can)i(often)e(be)h
(slightly)d(exceeded.)16 b(Many)-91 2463 y(soft-real-time)10
b(applications)f(can)j(also)e(tolerate)h(a)g(small)g(amount)-91
2513 y(of)i(packet)i(loss.)26 b(Best-ef)o(fort)13 b(or)h(data)g(traf)o(\256c)
g(has)h(no)e(delay)h(re-)-91 2563 y(quirement,)h(but)e(short)g(average)j
(delay)e(is)g(desired.)27 b(Best-ef)o(fort)-91 2613 y(traf)o(\256c)13
b(such)g(as)g(data)g(requires)g(lossless)f(transmission,)h(but)f(reli-)-91
2662 y(able)7 b(delivery)f(is)h(usually)f(handled)g(in)g(the)h(higher)f
(layer)h(protocols.)1037 827 y(Several)14 b(algorithms)d(have)j(been)g
(proposed)e(to)h(handle)g(hard-)987 877 y(real-time)d(traf)o(\256c)h([2)o(,)g
(3)o(,)g(4,)f(5,)h(8)o(,)g(1)n(1,)f(12,)h(15)o(,)g(16)o(,)g(17)o(])f(while)g
(best-)987 927 y(ef)o(fort)e(traf)o(\256c)i(may)g(be)f(handled)f(using)g(the)
h(well-known)f(methods)987 977 y(used)i(in)f(today')n(s)g(packet-switched)h
(networks.)k(In)c(contrast)f(there)987 1027 y(are)15 b(not)e(yet)i(good)e
(methods)h(for)g(handling)f(soft-real-time)g(traf-)987 1076
y(\256c)h(such)g(as)h(compressed)g(audio)e(or)h(video.)25 b(Such)14
b(traf)o(\256c)h(has)f(a)987 1126 y(variable-bit-rate)9 b(\(VBR\))h(and)h
(may)g(have)g(a)g(peak)g(data)g(rate)g(sev-)987 1176 y(eral)g(times)h(higher)
e(than)h(the)g(average)h(rate.)19 b(Therefore,)12 b(in)f(order)987
1226 y(to)e(ef)o(\256ciently)g(utilize)g(the)g(network,)g(admission)g
(control)g(must)g(be)987 1276 y(based)k(on)f(a)h(rate)f(closer)h(to)f(the)g
(average)h(rate,)h(and)e(the)g(network)987 1325 y(must)c(manage)h(its)e
(resources)h(carefully)g(so)g(as)g(to)f(handle)h(overload)987
1375 y(conditions)g(gracefully)m(.)1037 1428 y(An)15 b(overload)g(occurs)h
(when)g(a)g(switch)f(cannot)g(transmit)g(all)987 1478 y(packets)g(by)e(their)
h(deadlines)g(or)g(when)g(the)g(switch)g(runs)f(out)h(of)987
1528 y(buf)o(fer)9 b(space.)16 b(A)9 b(common)g(way)g(to)g(handle)g(overload)
f(is)h(to)f(allow)987 1577 y(the)j(switch)h(to)f(drop)g(some)h(packets.)20
b(Each)13 b(switch)e(must)h(decide)987 1627 y(which)j(packets)g(to)g(drop,)h
(preferably)f(in)f(a)i(way)g(that)e(is)h(fair)g(to)987 1677
y(all)10 b(users)g(and,)h(in)e(addition,)g(maximizes)i(the)f(number)g(of)g
(packets)987 1727 y(useful)g(to)f(the)i(users.)1037 1779 y(In)16
b(this)g(paper)n(,)j(we)e(are)g(concerned)h(with)d(the)i(performance)987
1829 y(of)c(algorithms)g(for)g(scheduling)g(the)g(transmission)g(of)g
(soft-real-)987 1879 y(time)i(packets)g(and)g(dropping)d(packets)k(during)d
(overloads.)28 b(W)m(e)987 1929 y(present)9 b(simulation)e(results)i(on)g
(four)f(algorithms)g(for)g(scheduling)987 1979 y(soft-real-time)17
b(VBR)g(traf)o(\256c)i(in)e(a)h(packet-switched)g(network.)987
2028 y(W)m(e)e(assume)i(the)e(network)f(is)h(connection-oriented,)g
(transmits)987 2078 y(messages)h(as)f(\256xed-size)g(packets)g(or)f(cells)g
(\(e.g.,)j(A)-5 b(TM)16 b(cells\),)987 2128 y(and)g(provides)f(some)h(type)f
(of)h(admission)f(control.)31 b(W)m(e)16 b(simu-)987 2178 y(late)e(the)g
(\256rst-come-\256rst-serve)g(\(FCFS\))g(algorithm)e(as)j(well)f(as)987
2228 y(three)i(algorithms)f(designed)g(for)h(hard-real-time)f(constant-bit-)
987 2278 y(rate)8 b(\(CBR\))g(traf)o(\256c:)13 b(the)8 b
(weighted-round-robin)d(\(WRR\))j([2)o(,)h(10)o(])987 2327
y(algorithm,)f(the)h(budgeted-weighted-round-rob)o(in)d(\(BWRR\))j(al-)987
2377 y(gorithm)h([1)n(1],)i(and)g(the)f(timed-token)f(\(TT\))i(algorithm)e
([6].)19 b(It)11 b(is)987 2427 y(well)g(known)f(that)g(the)h
(earliest-deadline-\256rst)f(\(EDF\))h(algorithm)987 2477 y(is)c(an)g
Fq(optimal)e Fo(real-time)i(scheduling)f(algorithm)g(in)g(the)h(sense)h(that)
987 2527 y(if)j(a)h(schedule)g(that)g(meets)g(all)f(deadlines)h(exists,)g
(the)g(EDF)g(algo-)987 2576 y(rithm)e(yields)g(such)h(a)g(schedule)h([9)o(])
1530 2561 y Fm(1)1546 2576 y Fo(.)18 b(W)m(e)11 b(call)g(such)g(a)g(schedule)
p 987 2623 394 2 v 1032 2651 a Fl(1)1047 2662 y Fk(The)i(EDF)h(algorithm)f
(is)g(optimal)g(when)g(preemption)f(is)h(allowed)g(at)g(any)p
eop
%%Page: 2 2
1 bop -91 42 a Fo(a)13 b Fq(feasible)e Fo(schedule.)22 b(When)13
b(all)f(relative)g(deadlines)g(are)h(equal,)-91 91 y(the)d(FCFS)g(algorithm)f
(is)g(equivalent)h(to)f(the)h(EDF)h(algorithm)d(and)-91 141
y(hence,)j(is)e(also)g(an)h(optimal)e(algorithm.)14 b(W)m(e)9
b(\256nd)g(that)g(among)g(the)-91 191 y(real-time)g(scheduling)e(algorithms,)
i(the)f(TT)i(algorithm)d(performs)-91 241 y(the)14 b(best.)28
b(However)n(,)16 b(we)f(also)f(\256nd)g(that)g(the)g(FCFS)h(algorithm)-91
291 y(performs)c(better)h(than)f(all)g(three)h(real-time)g(algorithms)e(and)i
(that)-91 340 y(this)d(is)h(true)g(even)h(when)f(a)h(feasible)f(schedule)h
(does)g(not)e(exist.)-41 392 y(W)m(e)25 b(also)g(present)h(simulation)d
(results)i(for)f(two)h(packet-)-91 442 y(dropping)10 b(algorithms:)17
b(1\))12 b(the)g(last-in-\256rst-discard)e(\(LIFD\))i(al-)-91
492 y(gorithm,)j(and)g(2\))g(a)g Fp(\()p Fo(1)p Fn(;)7 b(k)q
Fp(\))15 b Fo(dropping)e(algorithm.)28 b(The)15 b(former)-91
541 y(simply)f(drops)g(any)h(newly)g(arriving)e(packet)j(when)f(there)g(is)g
(no)-91 591 y(free)d(buf)o(fer)f(space.)19 b(The)12 b(latter)e(attempts)h(to)
g(drop)f(no)h(more)h(than)-91 641 y(1)k(packet)h(in)e(any)i(sequence)g(of)f
Fn(k)h Fo(packets)g(for)f(each)i(message)-91 691 y(stream.)e(W)m(e)10
b(measure)i(the)e(network)g(performance)h(by)f(the)g Fp(\()p
Fo(1)p Fn(;)d(k)q Fp(\))-91 741 y Fq(failur)n(e)13 b(rate)p
Fo(,)j(i.e.,)g(how)e(often)f(the)h(network)f(fails)h(to)g(deliver)f(at)-91
790 y(least)g Fn(k)h Fo(consecutive)f(packets.)25 b(Although)11
b(the)i Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))12 b Fo(dropping)-91
840 y(algorithm)7 b(does)h(reduce)h(the)f(failure)g(rate)h(compared)g(to)f
(the)g(LIFD)-91 890 y(algorithm,)k(we)h(\256nd)f(that)g(we)h(can)g(reduce)g
(the)g(failure)f(rate)h(by)f(a)-91 940 y(similar)c(amount)g(by)g(lowering)f
(the)i(network)f(utilization)e(by)i(a)h(few)-91 990 y(percent)h(and)g(using)e
(the)i(simpler)g(LIFD)g(algorithm.)j(Because)e(the)-91 1040
y(higher)e(complexity)h(of)g(the)g Fp(\()p Fo(1)p Fn(;)d(k)q
Fp(\))j Fo(dropping)e(algorithm)h(reduces)-91 1089 y(the)j(achievable)h
(transmission)e(rate)i(of)f(the)g(switches)h(and)f(ef)o(fec-)-91
1139 y(tively)f(reduces)j(the)f(achievable)g(utilization)d(of)j(the)g
(network)f(by)-91 1189 y(a)f(comparable)g(amount,)f(the)g(simple)g(LIFD)h
(algorithm)d(performs)-91 1239 y(just)h(as)h(well)f(as)i(the)e(more)i
(complex)e Fp(\()p Fo(1)p Fn(;)e(k)q Fp(\))j Fo(dropping)d(algorithm.)-41
1290 y(In)14 b([1)o(],)i(Clark)d Fq(et)i(al.)27 b Fo(presented)14
b(the)g(FIFO+)h(algorithm)e(for)-91 1340 y(scheduling)8 b(soft-real-time)g
(VBR)h(traf)o(\256c)h(and)f(compared)i(its)d(per)o(-)-91 1390
y(formance)16 b(to)f(the)g(WRR)h(algorithm.)29 b(Our)15 b(work)g(dif)o(fers)g
(from)-91 1440 y(theirs)f(in)g(that)g(we)h(include)f(a)h(comparison)f(of)h
(the)f(FCFS)h(algo-)-91 1490 y(rithm)10 b(to)h(the)f(TT)i(algorithm)e(and)h
(discuss)g(the)g(conditions)f(under)-91 1539 y(which)15 b(the)h(FCFS)f
(algorithm)g(is)g(able)h(to)f(transmit)g(all)h(packets)-91
1589 y(by)11 b(their)f(deadlines.)19 b(In)11 b([7],)g(Hamdaoui)h(and)f
(Ramanathan)h(pre-)-91 1639 y(sented)j(a)h(method)g(for)e(scheduling)h
(soft-real-time)f(traf)o(\256c)i(with)-91 1689 y(a)d Fp(\()p
Fn(m;)7 b(k)q Fp(\))12 b Fo(loss)g(requirement)g(where)h(the)f(network)f(is)h
(allowed)g(to)-91 1739 y(drop)f(at)g(most)h Fn(m)g Fo(packets)g(in)f(any)g
(sequence)i(of)e Fn(k)i Fo(packets.)20 b(Our)-91 1789 y Fp(\()p
Fo(1)p Fn(;)7 b(k)q Fp(\))g Fo(dropping)f(algorithm)h(is)h(a)h(special)f
(case)i(of)d(their)h(algorithm)-91 1838 y(where)j Fn(m)h Fp(=)f
Fo(1.)-41 1890 y(The)19 b(rest)f(of)h(this)e(paper)i(is)g(or)o(ganized)f(as)i
(follows.)38 b(Sec-)-91 1940 y(tion)9 b(2)i(presents)f(the)h(problem)f
(formulation,)f(Section)i(3)f(presents)-91 1990 y(the)21 b(scheduling)f(and)h
(packet-dropping)f(algorithms,)j(Section)-91 2039 y(4)18 b(presents)h(the)g
(results)f(of)g(our)h(simulations,)g(and)g(Section)f(5)-91
2089 y(presents)10 b(a)h(summary)g(of)f(our)g(results.)-91
2211 y Fr(2.)j(Pr)o(oblem)g(Formulation)-41 2324 y Fo(W)m(e)g(assume)h(that)e
(the)h(network)f(consists)h(of)f(a)i(single)e(packet)-91 2374
y(switch)7 b(and)g(that)g(t)o(he)g(swit)o(ch)g(is)f(non)o(blocki)o(ng,)t
(i.e.,)j(that)e(the)g(switch)-91 2424 y(can)k(route)e(an)i(incoming)e(packet)
h(to)g(the)g(appropriate)f(output)f(port)p -91 2466 394 2 v
-91 2505 a Fk(time.)17 b(Since)10 b(a)f(packet)g(transmission)g(cannot)f(be)h
(preempted,)g(this)h(algorithm)f(is)-91 2544 y(not)g(optimal)h(when)e(the)i
(arrival)g(times)f(and)g(deadlines)g(are)g(arbitrary)n(.)16
b(However)o(,)-91 2584 y(when)10 b(all)h(packets)e(have)h(the)g(same)g
(relative)h(deadline)e(a)i(newly)f(arrived)f(packet)-91 2623
y(cannot)c(have)g(a)h(deadline)f(less)i(than)f(the)g(packet)f(currently)g
(being)h(transmitted,)g(and)-91 2663 y(hence,)h(packet)g(preemption)f(is)j
(never)e(necessary)n(.)987 42 y Fo(without)h(con\257ict.)15
b(Packets)d(destined)d(for)h(dif)o(ferent)g(output)e(ports)987
91 y(do)i(not)g(interfere)g(with)f(each)j(other)n(,)e(and)h(thus,)f(the)g
(only)f(possible)987 141 y(queuing)k(delay)i(occurs)g(at)f(the)g(output)f
(ports.)27 b(The)15 b(network)f(is)987 191 y(connection-oriented)i(and)i
(transmits)f(messages)j(in)d(\256xed-size)987 241 y(packets)11
b(or)f(cells)g(\(e.g.,)i(A)-5 b(TM)11 b(cells\).)1037 291 y(W)n(ith)k(this)f
(network)h(model,)i(the)e(delay)h(a)g(message)h(experi-)987
340 y(ences)i(when)f(transmitted)e(through)g(a)j(switch)e(consists)g(of)h
(the)987 390 y(following)8 b(two)h(parts.)1018 466 y(1.)21
b(The)12 b Fq(queuing)e(delay)h Fo(is)g(the)g(amount)g(of)g(time)g(that)f(a)i
(packet)1070 515 y(is)i(blocked)f(at)h(the)g(output)e(port)h(of)h(a)h
(switch.)25 b(This)14 b(delay)1070 565 y(results)f(from)f(the)h(fact)h(that)e
(multiple)g(packets)i(may)f(arrive)1070 615 y(at)d(a)h(single)f(output)e
(port)h(at)i(the)f(same)i(time.)1018 694 y(2.)21 b(The)11 b
Fq(transmission)e(delay)i Fo(is)f(the)g(amount)g(of)h(time)f(required)1070
744 y(to)f(transmit)h(a)g(packet.)16 b(Since)11 b(packets)f(are)h(of)f
(\256xed)g(length,)1070 794 y(the)i(transmission)f(delay)h(is)f(constant)h
(and)g(depends)g(on)g(the)1070 844 y(packet)f(length)e(and)h(the)g
(transmission)g(rate.)1037 919 y(The)15 b(soft-real-time)f(traf)o(\256c)i(we)
f(consider)g(consists)f(of)h(VBR)987 969 y(periodic)e(message)i(streams.)27
b(Each)15 b(message)g(stream)g Fn(M)1870 975 y Fj(i)1898 969
y Fo(con-)987 1019 y(sists)d(of)f(a)i(periodic)e(sequence)j(of)d(message)j
(instances,)f(i.e.,)h(real)987 1068 y(messages.)21 b(W)m(e)11
b(call)h(the)f Fn(j)r Fo(-th)g(instance)h(of)f(message)i(stream)f
Fn(M)1957 1074 y Fj(i)987 1118 y Fn(M)1027 1124 y Fj(i;j)1066
1118 y Fo(.)30 b(When)15 b(there)g(is)f(no)h(ambiguity)m(,)g(we)h(also)f
(refer)g(to)f(each)987 1168 y(instance)e(as)h(a)g(message.)24
b(The)13 b(number)f(of)g(packets)h(in)f(message)987 1218 y(instance)e
Fn(M)1173 1224 y Fj(i;j)1223 1218 y Fo(is)f(the)h(random)g(variable)g
Fn(c)1620 1224 y Fj(i;j)1669 1218 y Fo(and)g(is)g(drawn)g(from)987
1268 y(some)j(probability)c(distribution)g Fn(c)1503 1274 y
Fj(i)1517 1268 y Fo(.)21 b(W)m(e)13 b(characterize)h(the)e(mes-)987
1318 y(sage)6 b(stream)g Fn(M)1222 1324 y Fj(i)1244 1318 y
Fo(by)g(the)g(tuple)g Fp(\()p Fn(c)1473 1324 y Fj(i)1487 1318
y Fn(;)h(p)1527 1324 y Fj(i)1540 1318 y Fn(;)g(d)1581 1324
y Fj(i)1594 1318 y Fn(;)g(k)1635 1324 y Fj(i)1648 1318 y Fp(\))p
Fo(.)14 b(The)6 b(\256rst)g(element,)987 1367 y Fn(c)1005 1373
y Fj(i)1019 1367 y Fo(,)11 b(is)f(the)h(probability)c(distribution)g(from)k
(which)f(the)g(number)h(of)987 1417 y(packets)e(generated)g(per)g(period)f
(is)h(drawn.)14 b(The)9 b(second)g(element,)987 1467 y Fn(p)1008
1473 y Fj(i)1022 1467 y Fo(,)h(is)f(its)g(period,)g(and)h Fn(d)1346
1473 y Fj(i)1369 1467 y Fo(is)f(its)g(\(soft\))g(relative)g(deadline,)h
(i.e.,)h(the)987 1517 y(maximum)i(allowed)f(time)h(to)f(transmit)g(all)g
(packets)h(in)f(each)i(pe-)987 1567 y(riod.)k(The)12 b(parameter)g
Fn(k)1358 1573 y Fj(i)1383 1567 y Fo(speci\256es)h(the)e(acceptable)i(packet)
f(loss)987 1616 y(rate)g(and)g(will)f(be)h(described)g(later)g(in)f(this)g
(section.)20 b(W)m(e)13 b(are)f(pri-)987 1666 y(marily)7 b(interested)h(in)f
(\256nding)f(the)i(achievable)g(value)g(of)g(the)f(delay)987
1716 y(of)12 b(each)h(message)g(stream)g(when)f(given)f(the)h(periods)f(and)h
(distri-)987 1766 y(bution)c(of)i(lengths)f(of)g(all)h(the)f(message)j
(streams)f(in)e(the)h(network.)987 1816 y(Therefore,)h(we)g(usually)e(refer)i
(to)f Fn(M)1532 1822 y Fj(i)1556 1816 y Fo(simply)g(by)g Fp(\()p
Fn(c)1766 1822 y Fj(i)1779 1816 y Fn(;)d(p)1819 1822 y Fj(i)1833
1816 y Fp(\))p Fo(.)1037 1865 y(Figure)17 b(1)g(shows)h(an)g(example)g
(packet)g(arrival)f(pattern)g(for)987 1915 y(message)f(stream)e
Fn(M)1306 1921 y Fm(1)1323 1915 y Fo(.)26 b(At)14 b(time)g(0)f(the)h(\256rst)
g(message)h(instance)987 1965 y Fn(M)1027 1971 y Fm(1)p Fj(;)p
Fm(1)1083 1965 y Fo(arrives)g(and)h(is)e(segmented)i(into)e
Fn(c)1620 1971 y Fm(1)p Fj(;)p Fm(1)1679 1965 y Fp(=)19 b Fo(3)c(packets.)30
b(At)987 2015 y(time)15 b Fn(p)1097 2021 y Fm(1)1113 2015 y
Fo(,)i(the)e(second)h(message)h(instance)e Fn(M)1684 2021 y
Fm(1)p Fj(;)p Fm(2)1740 2015 y Fo(arrives)g(and)h(is)987 2065
y(segmented)10 b(into)e Fn(c)1266 2071 y Fm(1)p Fj(;)p Fm(2)1318
2065 y Fp(=)k Fo(10)d(packets.)15 b(The)10 b(third)e(instance,)i
Fn(M)1920 2071 y Fm(1)p Fj(;)p Fm(3)1961 2065 y Fo(,)987 2115
y(arrives)i(at)f(time)h(2)p Fn(p)1281 2121 y Fm(1)1309 2115
y Fo(and)g(is)f(segmented)h(into)f Fn(c)1704 2121 y Fm(1)p
Fj(;)p Fm(3)1758 2115 y Fp(=)j Fo(2)d(packets.)987 2164 y(Later)n(,)j(we)f
(will)e(say)i(that)e(packets)i(arrive)f Fq(continuously)f Fo(starting)987
2214 y(from)g(the)h(beginning)e(of)h(each)i(period)e(when)g(the)h(arrival)f
(pattern)987 2264 y(is)f(as)h(illustrated)d(in)i(this)f(example.)1037
2314 y(Unless)f(otherwise)g(stated,)h(we)g(take)g(our)e(basic)i(time)f(unit)f
(to)h(be)987 2364 y(the)i(time)g(required)g(to)f(transmit)g(one)i(packet)f
(and)g(call)h(this)e(time)h(a)987 2413 y Fq(slot)p Fo(.)k(Each)d(packet)f(is)
g(transmitted)e(in)i(one)f(slot.)15 b(Throughout)8 b(the)987
2463 y(paper)n(,)13 b(we)g(assume)g(that)e(the)h(messages)i(all)d(have)i
(equal)f(relative)987 2513 y(deadlines.)18 b(W)m(e)11 b(believe)h(that)e
(this)g(is)h(a)h(valid)f(assumption)f(in)h(the)987 2563 y(case)f(where)f(all)
f(traf)o(\256c)h(is)f(interactive.)14 b(For)8 b(example,)i(interactive)987
2613 y(voice)i(and)g(video,)h(although)d(they)i(have)h(very)f(dif)o(ferent)f
(periods)987 2662 y(and)j(data)h(rates,)h(both)e(require)g(round)f(trip)g
(delays)i(of)f(less)h(than)p eop
%%Page: 3 3
2 bop -49 42 a
 14208860 2557590 9867264 46507704 30588518 50323046 startTexFig
 -49 42 a
%%BeginDocument: PRES/prob_ex.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 150 707 465 765
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 189 949 ] concat
%I
[
(M1)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -35 598 ] concat
%I
264 328 613 328 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -5 598 ] concat
%I
234 338 234 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -65 598 ] concat
%I
404 328 404 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 44 598 ] concat
%I
404 328 404 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 154 598 ] concat
%I
404 328 404 318 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 229 906 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 339 906 ] concat
%I
[
(p)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 448 906 ] concat
%I
[
(2p)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 558 906 ] concat
%I
[
(3p)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 75 598 ] concat
%I
264 338 314 358 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -35 598 ] concat
%I
264 338 294 358 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -35 598 ] concat
%I
284 338 294 338 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -35 598 ] concat
%I
483 338 503 358 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 357 950 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 240 951 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 454 950 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
/Helvetica 12 SetF
%I t
[ 1 0 0 1 348 898 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
/Helvetica 12 SetF
%I t
[ 1 0 0 1 464 896 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
/Helvetica 12 SetF
%I t
[ 1 0 0 1 574 896 ] concat
%I
[
(1)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 -29 336 a Fi(Figure)12 b(1.)f(An)h(example)g(packet)g(arrival)f(pattern.)-91
470 y Fo(300)g Fq(ms)p Fo(.)19 b(It)10 b(is)i(likely)e(that)h(playback)g
(traf)o(\256c)h(will)e(have)i(dif)o(ferent)-91 520 y(delay)h(requirements;)g
(however)n(,)h(we)f(leave)g(this)f(issue)h(to)f(future)-91
570 y(work.)-41 620 y(A)g(message)i(instance)e Fn(M)342 626
y Fj(i;j)394 620 y Fo(originates)f(at)i(some)g(source)f(sta-)-91
670 y(tion)j Fn(S)15 676 y Fj(sr)q(c)64 670 y Fo(.)33 b(The)17
b(message)h(is)d(broken)h(up)g(into)e Fn(c)676 676 y Fj(i;j)732
670 y Fo(\256xed-size)-91 720 y(packets)d(and)f(is)g(sent)g(through)f(the)h
(switch)f(to)h(its)g(destination)e(sta-)-91 769 y(tion)j Fn(S)11
775 y Fj(dst)72 769 y Fo(where)i(the)g(message)h(is)f(\256nally)f
(reassembled.)24 b(Since)-91 819 y(the)7 b(output)e(link)h(on)h(which)g
Fn(M)350 825 y Fj(i)372 819 y Fo(is)g(transmitted)f(is)h(shared)h(by)f(many)
-91 869 y(other)k(message)i(streams,)g(the)e(problem)g(is)h(how)f(to)g
(schedule)g(the)-91 919 y(links)f(and)i(manage)h(the)e(buf)o(fer)h(space)h
(in)e(the)h(switch)f(so)g(that)g(the)-91 969 y(quality-of-service)d
(requirements)i(of)g(the)g(streams)i(are)f(met.)-41 1019 y(It)g(is)h
(desirable)g(to)f(admit)h(a)h(message)g(stream)g Fn(M)695 1025
y Fj(i)721 1019 y Fo(to)f(the)g(net-)-91 1068 y(work)d(only)g(if)g(its)h
(delay)g(and)g(loss)f(requirements)h(can)h(be)f(met)g(and)-91
1118 y(its)i(admission)h(does)g(not)f(cause)j(messages)g(from)e(other)f
(streams)-91 1168 y(already)h(admitted)f(by)g(the)h(network)f(to)g(exceed)i
(their)e(delay)g(and)-91 1218 y(loss)17 b(requirements.)38
b(One)18 b(way)g(to)f(achieve)i(this)e(is)g(to)h(admit)-91
1268 y(streams)g(to)e(the)h(network)f(based)i(on)f(their)f(worst)g(case)j
(packet)-91 1317 y(generation)12 b(rate,)i(i.e.,)g Fn(p)278
1323 y Fj(i)304 1317 y Fo(and)f(maximum)g(value)f(of)h Fn(c)726
1323 y Fj(i;j)765 1317 y Fo(,)g(and)g(to)-91 1367 y(use)e(one)g(of)g(the)g
(hard-real-time)f(scheduling)g(algorithms.)17 b(How-)-91 1417
y(ever)n(,)11 b(with)d(VBR)h(traf)o(\256c)h(the)f(worst)g(case)i(packet)f
(generation)f(rate)-91 1467 y(can)j(be)h(several)f(times)g(higher)f(than)h
(the)f(average)j(rate.)20 b(In)12 b(order)-91 1517 y(to)f(achieve)i(a)g
(higher)e(network)g(utilization,)g(admission)g(must)h(be)-91
1566 y(done)e(on)g(a)g(rate)h(that)e(is)h(closer)h(to)e(the)h(average,)i(and)
e(the)g(network)-91 1616 y(must)g(handle)g(overload)g(conditions)e
(gracefully)m(.)-41 1666 y(W)m(e)e(choose)g(the)g Fp(\()p Fo(1)p
Fn(;)h(k)q Fp(\))f Fo(failure)g(policy)g(for)g(measuring)g(graceful)-91
1716 y(handling)h(of)g(overlo)o(ad)g(condit)o(ion)o(s.)12 b(W)m(e)7
b(say)g(that)g(a)g(failure)g(occurs)-91 1766 y(when)k(a)h(packet)f(arrives)h
(at)f(its)f(destination)g(after)h(its)g(deadline)g(or)-91 1816
y(is)h(dropped)g(in)g(the)h(network)f(because)i(of)f(lack)g(of)f(buf)o(fer)h
(space.)-91 1865 y(A)8 b(message)j(stream)e(that)f(uses)h(the)g
Fp(\()p Fo(1)p Fn(;)e(k)q Fp(\))h Fo(failure)g(policy)f(requires)-91
1915 y(no)13 b(more)g(than)g(one)h(failure)e(for)h(any)g Fn(k)i
Fo(consecutive)e(packets)h(in)-91 1965 y(the)8 b(stream.)15
b(Network)8 b(performance)h(is)f(measured)h(by)f(how)g(often)-91
2015 y(the)h Fp(\()p Fo(1)p Fn(;)e(k)q Fp(\))i Fo(failure)g(requirement)g(is)
g(violated,)f(i.e.,)j(the)e(number)h(of)-91 2065 y Fp(\()p
Fo(1)p Fn(;)d(k)q Fp(\))g Fo(failures.)14 b(The)9 b Fp(\()p
Fo(1)p Fn(;)e(k)q Fp(\))g Fq(failur)n(e)g(rate)h Fo(is)g(the)f(number)h(of)g
Fp(\()p Fo(1)p Fn(;)f(k)q Fp(\))-91 2115 y Fo(failures)j(divided)f(by)i(the)f
(total)g(number)g(of)h(packets)g(transmitted.)-91 2164 y(For)h(example,)j(if)
d Fn(k)17 b Fp(=)e Fo(10)d(and)h(the)g(1)n(1th,)g(30th,)g(40th,)g(and)g(41st)
-91 2214 y(packets)j(of)g(a)h(message)g(stream)g(are)g(dropped,)g(the)f
(number)g(of)-91 2264 y(failures)e(is)g(2.)28 b(Since)15 b(the)g(\256rst)f
(10)g(packets)h(are)h(delivered,)f(the)-91 2314 y(dropping)f(of)h(the)h(1)n
(1th)f(packet)h(is)g(not)f(a)h(failure.)32 b(Also,)17 b(since)-91
2364 y(packets)f(20)g(through)e(29)i(are)h(delivered,)g(the)f(dropping)e(of)h
(the)-91 2413 y(30th)8 b(packet)i(is)f(not)g(a)h(failure.)k(However)n(,)d
(when)e(the)g(40th)g(packet)-91 2463 y(is)h(dropped,)h(only)f(9)g
(consecutive)h(packets)h(have)f(been)g(received,)-91 2513 y(so)j(a)h(failure)
f(occurs.)28 b(The)15 b(dropping)d(of)j(the)f(41st)f(packet)i(also)-91
2563 y(counts)9 b(as)h(one)f(failure.)15 b(In)9 b(our)g(example,)i(if)e(the)g
(total)f(number)i(of)-91 2613 y(packets)h(of)f(the)g(message)i(transmitted)d
(is)h(100,)g(the)g Fp(\()p Fo(1)p Fn(;)d(k)q Fp(\))j Fo(failure)-91
2662 y(rate)g(is)g(0.02.)987 42 y Fr(3.)25 b(Scheduling,)h(T)l(raf\256c)f
(Shaping,)h(and)e(Packet-)1062 100 y(Dr)o(opping)11 b(Algorithms)1037
209 y Fo(In)i(this)g(section,)i(we)f(introduce)f(the)h(scheduling)f
(algorithms)987 259 y(and)c(packet-dropping)f(algorithms)g(that)g(we)i
(simulated.)15 b(W)m(e)9 b(also)987 309 y(discuss)h(the)g(issue)h(of)f(traf)o
(\256c)g(shaping)g(of)g(VBR)g(periodic)f(traf)o(\256c.)987
414 y Fh(3.1.)j(Scheduling)h(Algorithms)1037 519 y Fo(The)h(scheduling)e
(algorithms)g(we)h(evaluated)h(in)e(our)h(simula-)987 569 y(tion)6
b(study)g(were)g(the)g(WRR,)g(BWRR,)g(TT)m(,)g(and)g(FCFS)g(algorithms.)987
619 y(The)k(FCFS)g(algorithm)e(is)h(equivalent)g(to)g(the)g(optimal)g(EDF)h
(algo-)987 669 y(rithm)e(because)j(all)e(messages)i(have)f(the)f(same)h
(relative)f(deadline.)987 719 y(The)i(TT)g(algorithm)e(was)i(originally)c
(introduced)i(as)i(the)f(medium)987 769 y(access)15 b(control)d(algorithm)g
(for)h(the)g(FDDI)g(local)g(area)i(network.)987 818 y(However)n(,)h(the)e(TT)
h(algorithm)e(can)h(also)h(be)f(used)g(to)g(provide)f(a)987
868 y(type)e(of)g(round-robin)e(service)j(to)f(message)i(streams)f(in)f(a)h
(packet)987 918 y(switch.)i(The)8 b(main)f(dif)o(ference)h(between)g(the)f
(two)g(network)f(archi-)987 968 y(tectures)i(is)f(that)h(in)f(the)g(switch)h
(there)f(is)h(no)f(bandwidth)f(lost)h(due)h(to)987 1018 y(passing)i(a)i
(token)e(among)h(message)h(streams.)18 b(The)11 b(round-robin-)987
1067 y(based)e(schedulers)g(\(WRR,)g(BWRR,)f(TT\))h(all)f(assign)h(a)g
(weight)f Fn(w)1958 1073 y Fj(i)987 1117 y Fo(to)j(each)h(message)h(stream)f
(such)f(that)g(the)g(sum)g(of)g(the)g(weights)g(is)987 1167
y(less)h(than)e(some)i(value)g Fn(C)s Fo(,)f(called)h(the)f
Fq(scheduler)g(cycle)i(time)e Fo(\(or)987 1217 y(tar)o(get)i(token)g
(rotation)f(time)i(in)f(TT)i(terminology\).)23 b(The)14 b(actual)987
1267 y(scheduler)c(cycle)h(time)g(varies)f(among)g(the)h(three.)1037
1317 y(According)e(to)g(the)h(WRR)f(algorithm,)g(if)g(message)j(stream)e
Fn(M)1957 1323 y Fj(i)987 1367 y Fo(has)15 b Fn(w)1087 1373
y Fj(i)1116 1367 y Fo(or)f(more)h(packets)h(ready)m(,)h(the)e(scheduler)g
(transmits)f Fn(w)1958 1373 y Fj(i)987 1417 y Fo(packets)i(from)f
Fn(M)1263 1423 y Fj(i)1293 1417 y Fo(before)g(transmitting)f(packets)i(from)f
Fn(M)1907 1423 y Fj(i)p Fg(+)p Fm(1)1961 1417 y Fo(.)987 1466
y(If)e Fn(M)1068 1472 y Fj(i)1095 1466 y Fo(has)g(only)f Fn(q)i
Fo(packets)g(ready)m(,)g(where)g Fn(q)i(<)g(w)1762 1472 y Fj(i)1775
1466 y Fo(,)e(the)f(sched-)987 1516 y(uler)e(transmits)h(all)f
Fn(q)i Fo(packets)g(from)e Fn(M)1582 1522 y Fj(i)1608 1516
y Fo(and)h(then)g(immediately)987 1566 y(transmits)j(packets)h(from)g
Fn(M)1432 1572 y Fj(i)p Fg(+)p Fm(1)1486 1566 y Fo(.)32 b(Because)1682
1535 y Ff(P)1726 1579 y Fj(i)1746 1566 y Fn(w)1776 1572 y Fj(i)1809
1566 y Fe(\024)19 b Fn(C)s Fo(,)f(the)987 1616 y(scheduler)10
b(of)o(fers)g(at)g(least)g Fn(w)1418 1622 y Fj(i)1442 1616
y Fo(slots)f(to)g(stream)i Fn(M)1731 1622 y Fj(i)1755 1616
y Fo(in)f Fq(every)h Fo(time)987 1666 y(interval)h(of)h(length)g
Fn(C)s Fo(.)24 b(Hence,)16 b(according)d(to)g(the)g(WRR)g(algo-)987
1716 y(rithm,)e(the)g(actual)h(length)e(of)i(each)g(cycle)g(is)g(at)f(most)g
(equal)h(to)f Fn(C)987 1765 y Fo(but)j(can)h(be)g(less)g(than)g
Fn(C)s Fo(.)28 b(When)15 b(the)g(actual)g(scheduler)g(cycle)987
1815 y(time)f(is)g(less)h(than)f Fn(C)s Fo(,)i(the)e(WRR)g(scheduling)g
(algorithm)f(visits)987 1865 y(each)g(message)g(stream)f(more)g(often,)g
(thus)f(transmitting)e(packets)987 1915 y(from)15 b(each)h(message)h(stream)f
(at)f(a)h(rate)f(higher)f(than)h(that)g(con-)987 1965 y(tracted.)22
b(The)13 b(WRR)g(algorithm)e(transmits)g(these)i(packets)h(from)987
2014 y(each)d(stream)g(in)f(a)h(fair)e(way)m(,)j(i.e.,)f(the)f(unused)g
(bandwidth)e(of)i(one)987 2064 y(stream)h(is)f(shared)h(equally)e(among)i
(the)f(other)g(streams.)1037 2115 y(The)g(WRR)e(scheduling)h(algorithm)e(is)i
Fq(work-conserving)p Fo(,)h(i.e.,)987 2164 y(it)g(transmits)h(packets)h
(whenever)f(there)g(are)h(packets)g(ready)g(to)e(be)987 2214
y(transmitted.)22 b(In)13 b(contrast,)g(a)h Fq(non-work-conserving)e
Fo(algorithm)987 2264 y(is)g(one)f(which)h(may)g(leave)h(the)e(link)g(idle)g
(even)h(though)f(there)h(are)987 2314 y(packets)d(waiting)f(to)g(be)h
(transmitted.)14 b(It)8 b(has)i(been)f(shown)g(that)f(by)987
2364 y(using)14 b(a)h Fq(non-work-conserving)f Fo(algorithm)f(the)i(amount)f
(of)g(re-)987 2413 y(quired)8 b(buf)o(fer)h(space)h(for)f(hard-real-time)f
(traf)o(\256c)i(can)g(be)f(reduced)987 2463 y(signi\256cantly)f([5,)j(8)o(,)g
(1)n(1,)g(12)o(,)g(15)o(,)g(16)o(].)16 b(The)10 b(BWRR)g(algorithm)f(is)987
2513 y(one)j(such)g(algorithm.)19 b(According)12 b(to)f(the)h(BWRR)f
(algorithm,)h(a)987 2563 y(budget)e(is)g(kept)g(for)g(each)i(message)h
(stream)e(which)f(indicates)h(the)987 2613 y(maximum)g(number)f(of)f(packets)
i(that)f(can)g(be)h(transmitted)e(by)h(the)987 2663 y(scheduler)n(.)17
b(The)11 b(budget)f(is)g(never)h(more)h(than)e Fn(w)1720 2669
y Fj(i)1744 2663 y Fo(and)h(is)g(replen-)p eop
%%Page: 4 4
3 bop -2 1 a
 9472573 5304635 10261954 42758144 24733941 50915082 startTexFig
 -2 1 a
%%BeginDocument: PRES/in_phase.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 156 650 376 774
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -38.5 503.5 ] concat
%I
278 354 278 334 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -38.5 503.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 239.5 827.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 449.5 827.5 ] concat
%I
[
(20)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -148.5 503.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 339.5 827.5 ] concat
%I
[
(10)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -198.5 503.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -98.5 503.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 289.5 827.5 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 389.5 827.5 ] concat
%I
[
(15)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 13 559 ] concat
%I
226 288 456 288 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 13 559 ] concat
%I
226 298 326 318 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 13 559 ] concat
%I
226 328 276 348 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 13 559 ] concat
%I
226 358 256 378 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 13 559 ] concat
%I
226 388 246 408 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 291.5 870.5 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 261.5 902.5 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 251.5 932.5 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 247.5 961.5 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 197 872 ] concat
%I
[
(M1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 197 902 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 197 932 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 197 961 ] concat
%I
[
(M4)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 396 a Fo(\(a\))-2 473 y
 9472573 5304635 11446026 42692362 25852231 50849300 startTexFig
 -2 473 a
%%BeginDocument: PRES/ideal_phase.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 174 649 393 773
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -16.5 501.5 ] concat
%I
278 354 278 334 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -16.5 501.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 261.5 825.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 471.5 825.5 ] concat
%I
[
(20)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -126.5 501.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 361.5 825.5 ] concat
%I
[
(10)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -176.5 501.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -76.5 501.5 ] concat
%I
488 344 488 334 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 311.5 825.5 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 411.5 825.5 ] concat
%I
[
(15)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 35 557 ] concat
%I
226 288 456 288 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 35 557 ] concat
%I
226 298 326 318 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 135 557 ] concat
%I
226 328 276 348 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 184 557 ] concat
%I
226 358 256 378 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 214 557 ] concat
%I
226 388 246 408 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 313.5 868.5 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 383.5 900.5 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 422.5 930.5 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 448.5 959.5 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219 870 ] concat
%I
[
(M1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219 900 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219 930 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219 959 ] concat
%I
[
(M4)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 868 a Fo(\(b\))-41 1001 y Fi(Figure)16 b(2.)e(W)o(orst)i(case)g(phase)g
(and)g(ideal)e(phase)-41 1051 y(for)d(buffer)i(usage.)-91 1218
y Fo(ished)8 b(at)i(intervals)e(of)g(no)h(less)g(than)g Fn(C)i
Fo(slots.)j(Thus,)c(according)f(to)-91 1268 y(the)j(BWRR)f(algorithm,)h
Fn(w)321 1274 y Fj(i)347 1268 y Fo(packets)h(are)g(transmitted)e(from)h
Fn(M)879 1274 y Fj(i)-91 1317 y Fo(within)7 b Fn(C)12 b Fo(slots,)c(but)g(no)
h(more)g(packets)h(are)f(transmitted)f(until)f(the)-91 1367
y(interval)i(of)h(length)f Fn(C)k Fo(ends.)-41 1417 y(In)7
b(the)g(TT)h(algorithm,)e(the)h(scheduler)h(cycle)g(time)f(and)g(weights)-91
1467 y(are)i(determined)g(in)g(the)f(same)j(way)e(as)g(for)g(the)f(WRR)h(and)
g(BWRR)-91 1517 y(algorithms.)k(However)n(,)e(the)d(scheduler)i(keeps)f
(track)g(of,)h(for)e(each)-91 1567 y(stream,)13 b(the)e(time)g
Fn(t)204 1551 y Fd(0)227 1567 y Fo(when)h(it)e(last)h(transmitted)f(packet)i
(from)f(the)-91 1616 y(stream.)k(When)9 b(the)f(scheduler)g(begins)g(to)f
(transmit)h(packets)g(from)-91 1666 y(a)13 b(stream,)h(the)e(current)h(time)f
(is)g(compared)i(with)d(the)h(time)h Fn(t)822 1651 y Fd(0)833
1666 y Fo(.)23 b(If)-91 1716 y(the)10 b(time)h(between)g(visits,)f
Fn(t)328 1722 y Fj(cy)q(cle)404 1716 y Fo(,)h(is)g(less)g(than)f
Fn(C)s Fo(,)h(the)f(scheduler)-91 1766 y(transmits)j(transmit)g
Fn(w)255 1772 y Fj(i)282 1766 y Fo(packets)h(plus)f(up)h(to)f
Fn(t)620 1772 y Fj(cy)q(cle)707 1766 y Fe(\000)f Fn(w)781 1772
y Fj(i)808 1766 y Fo(more)-91 1816 y(packets.)18 b(If)11 b(the)g(time,)g
Fn(t)272 1822 y Fj(cy)q(cle)348 1816 y Fo(,is)h(not)e(less)h(than)g
Fn(C)s Fo(,)g(the)g(scheduler)-91 1865 y(transmits)f(at)i(most)f
Fn(w)236 1871 y Fj(i)260 1865 y Fo(packets.)19 b(It)10 b(was)i(shown)f(in)f
([13])h(that)f(the)-91 1915 y(actual)j(scheduler)g(cycle)h(time)f(in)f(the)h
(TT)h(algorithm)e(is)g(at)h(most)-91 1965 y(2)p Fn(C)19 b Fo(and)e(that)f
(the)h(average)h(scheduler)f(cycle)h(time)f(is)f(at)h(most)-91
2015 y Fn(C)s Fo(.)j(The)13 b(TT)f(algorithm,)g(like)f(the)h(WRR)f
(algorithm,)h(is)g(a)g(work-)-91 2065 y(conserving)g(algorithm)g(but)g(dif)o
(fers)h(from)g(the)g(WRR)g(algorithm)-91 2114 y(in)e(the)i(way)f(it)g(shares)
h(unused)f(bandwidth)e(among)j(the)f(streams.)-91 2164 y(According)c(to)g
(the)g(TT)i(algorithm,)e(one)h(message)h(stream)f(can)h(use)-91
2214 y(up)e(the)h(entire)f(unused)h(bandwidth)e(from)i(the)f(previous)g
(scheduler)-91 2264 y(cycle.)-91 2364 y Fh(3.2.)k(T)m(raf\256c)g(Shaping)-41
2463 y Fo(Before)c(we)h(introduce)f(our)g(packet-dropping)f(algorithms,)h(we)
-91 2513 y(\256rst)k(make)h(some)h(observations)d(about)h(the)g(phases)h(of)f
(the)g(mes-)-91 2563 y(sage)i(streams)h(and)e(how)g(they)g(af)o(fect)i(the)e
(buf)o(fer)g(requirements.)-91 2613 y(As)7 b(an)g(example,)i(suppose)d(we)i
(have)f(4)g(periodic)f(message)i(streams)-91 2662 y(each)i(with)d(period)h
(20.)15 b(In)8 b(a)i(particular)d(period)h(they)h(generate)g(10,)987
42 y(5,)k(3,)h(and)f(2)f(packets.)24 b(Figure)12 b(2)g(shows)h(that)f(the)h
(phases)g(of)g(the)987 91 y(message)f(streams)f(can)g(make)h(a)f(great)f
(deal)h(of)f(dif)o(ference)h(on)f(the)987 141 y(required)e(buf)o(fer)g
(space.)16 b(Figure)8 b(2a)h(shows)f(the)g(worst)g(case)i(phase)987
191 y(which)d(is)g(when)g(all)g(the)g(streams)h(are)g(in)f(phase)h(and)f(the)
g(packets)h(ar)o(-)987 241 y(rive)f(continuously)m(.)13 b(During)6
b(the)i(\256rst)g(time)f(slot,)h(4)g(packets)g(arrive)987 291
y(and)i(require)g(4)g(buf)o(fers.)15 b(During)9 b(the)h(second)g(slot,)g(4)g
(more)g(pack-)987 340 y(ets)i(arrive)g(and)g(one)f(is)h(transmitted,)g(so)f
(the)h(buf)o(fer)g(requirement)987 390 y(is)h(7.)25 b(Continuing)10
b(this)j(analysis,)h(we)g(\256nd)f(that)g(the)g(number)h(of)987
440 y(buf)o(fers)d(required)f(for)g(this)g(arrival)g(pattern)g(is)h(10.)17
b(Note)10 b(that)g(this)987 490 y(analysis)f(assumes)h(we)g(are)g(using)e(a)i
(work-conserving)d(scheduler)987 540 y(where)16 b(a)f(packet)h(is)f
(transmitted)f(whenever)i(there)f(are)h(packets)987 589 y(queued)11
b(in)g(the)g(switch.)17 b(Figure)10 b(2b)h(shows)g(the)g(ideal)g(phases)h
(for)987 639 y(the)g(streams)h(in)e(terms)i(of)e(minimizing)g(buf)o(fer)h
(usage.)21 b(Here,)14 b(10)987 689 y(packets)9 b(of)g Fn(M)1204
695 y Fm(1)1230 689 y Fo(arrive,)g(then)g(the)g(5)g(packets)g(of)g
Fn(M)1734 695 y Fm(2)1760 689 y Fo(arrive)f(and)h(so)987 739
y(on.)15 b(In)9 b(this)f(case,)k(no)d(two)g(packets)h(arrive)g(at)f(the)g
(same)i(time,)f(and)987 789 y(the)g(switch)g(only)f(needs)i(to)f(buf)o(fer)g
(one)g(packet)h(at)f(a)h(time.)1037 841 y(Because)g(the)e(phases)i(of)e(the)h
(streams)h(can)f(make)h(such)f(a)g(lar)o(ge)987 891 y(dif)o(ference)h(in)f
(the)g(required)g(buf)o(fer)g(space,)i(we)f(are)g(motivated)f(to)987
941 y(look)j(for)h(ways)h(to)f(minimize)g(the)h(ef)o(fects)g(of)f(phase.)29
b(Figure)14 b(3)987 991 y(shows)h(how)f(this)h(can)g(be)h(done.)29
b(In)15 b(Figure)f(3a,)j(we)f(show)f(the)987 1041 y(packet)f(arrivals)e(from)
h(the)g(message)i(streams)f(in)f(Figure)g(2)g(split)987 1090
y(into)g(two)h(evenly)h(spaced)g(groups.)28 b(For)14 b(example,)j
Fn(M)1827 1096 y Fm(1)1844 1090 y Fo(,)f(which)987 1140 y(has)10
b(10)e(packets,)j(is)e(split)e(into)h(two)h(groups)f(of)h(5)g(packets)h
(arriving)987 1190 y(10)i(slots)g(apart.)24 b(If)12 b(we)i(analyze)f(the)g
(buf)o(fer)g(space)h(requirement)987 1240 y(for)d(this)f Fq(partially)g(spr)n
(ead)i Fo(packet)g(arrival)f(pattern,)g(we)h(\256nd)f(that)987
1290 y(6)g(buf)o(fers)g(are)h(required.)18 b(The)12 b(number)f(of)g(required)
g(buf)o(fers)g(can)987 1339 y(be)16 b(reduced)g(further)e(by)h(again)h
(spreading)f(the)g(packet)h(arrivals)987 1389 y(into)10 b(four)g(groups)g
(and)h(so)g(on.)18 b(If)10 b(we)i(carry)f(this)f(ar)o(gument)i(to)e(its)987
1439 y(logical)e(conclusion,)h(we)g(\256nd)g(that)f(we)i(can)g(minimize)f
(the)f(ef)o(fects)987 1489 y(of)17 b(phase)g(on)g(the)g(buf)o(fer)g
(requirement)g(by)g(spreading)f(out)h(the)987 1539 y(packet)d(arrivals)f
(from)g(each)i(stream)f(evenly)f(over)g(the)h(streams')987
1589 y(periods.)22 b(This)13 b(is)f(shown)g(in)h(Figure)f(3b.)22
b(For)13 b(example,)h(the)f(10)987 1638 y(packets)f(from)g
Fn(M)1256 1644 y Fm(1)1285 1638 y Fo(are)h(spread)f(out)f(over)h(the)g
(interval)f(of)h(length)987 1688 y(20,)18 b(and)e(therefore)h(one)f(arrives)h
(every)g(2)f(slots.)33 b(If)16 b(we)h(again)987 1738 y(analyze)g(the)f(buf)o
(fer)g(requirement)h(for)e(the)i Fq(completely)f(spr)n(ead)987
1788 y Fo(arrival)10 b(pattern,)g(we)g(\256nd)g(that)g(only)f(4)h(buf)o(fers)
h(are)g(required.)987 1900 y Fh(3.3.)h(Packet-Dr)o(opping)h(Algorithms)1037
2012 y Fo(The)20 b(last-in-\256rst-discard)d(\(LIFD\))i(packet-dropping)e
(algo-)987 2062 y(rithm)k(simply)g(drops)h(any)g(arriving)e(packet)j(that)e
(cannot)h(be)987 2112 y(buf)o(fered)14 b(because)j(there)d(are)i(no)e(free)h
(buf)o(fers.)28 b(The)16 b(LIFD)f(al-)987 2162 y(gorithm)8
b(is)i(far)g(simpler)g(than)g(the)f Fp(\()p Fo(1)p Fn(;)e(k)q
Fp(\))j Fo(packet-dropping)e(algo-)987 2211 y(rithm.)1037 2264
y(A)k(switch)f(that)g(uses)i(the)e Fp(\()p Fo(1)p Fn(;)c(k)q
Fp(\))12 b Fo(packet-dropping)e(algorithm)987 2314 y(tries)k(to)g(drop)g(no)g
(more)h(than)f(1)g(packet)h(in)f(any)g(sequence)i(of)e Fn(k)987
2364 y Fo(packets)f(from)f(each)i(message)g(stream.)23 b(In)12
b(order)g(to)g(implement)987 2413 y(the)f Fp(\()p Fo(1)p Fn(;)c(k)q
Fp(\))k Fo(dropping)e(algorithm,)h(the)h(message)i(stream)f(declares)987
2463 y(its)k(value)h(of)g Fn(k)h Fo(at)f(connection)f(setup)g(time.)35
b(When)18 b(a)f(packet)987 2513 y(arrives)8 b(at)h(a)g(switch,)g(it)e(is)i
(tagged)f(with)f(a)i(count)f(of)g(the)g(number)h(of)987 2563
y(packets)h(received)h(from)e(the)h(stream)g(at)g(that)f(switch.)15
b(The)10 b(switch)987 2613 y(keeps)h(track)g(of)f(the)g(count)g(of)h(the)f
(last)g(packet)h(dropped)f(for)g(each)987 2662 y(stream.)19
b(When)11 b(a)h(packet)g(arrives)f(and)g(there)g(is)g(no)g(buf)o(fer)g(space)
p eop
%%Page: 5 5
4 bop -2 25 a
 9472573 4925735 11906498 42560798 26773176 50388828 startTexFig
 -2 25 a
%%BeginDocument: PRES/spread2.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 181 647 407 766
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 619 ] concat
%I
286 258 306 278 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 265.5 823.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 464.5 823.5 ] concat
%I
[
(20)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 229.5 860.5 ] concat
%I
[
(M1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 228.5 891.5 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 229.5 920.5 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 228.5 951.5 ] concat
%I
[
(M4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 366.5 823.5 ] concat
%I
[
(10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 315.5 823.5 ] concat
%I
[
(5)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 415.5 823.5 ] concat
%I
[
(15)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
286 328 525 328 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
286 338 286 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 33 509 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 509 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 133 509 ] concat
%I
336 328 336 318 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
286 338 336 358 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
286 398 296 418 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 539 ] concat
%I
286 398 296 418 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
296 388 296 368 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -17 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -7 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 13 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 509 ] concat
%I
286 338 336 358 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 93 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 103 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 113 509 ] concat
%I
296 358 296 338 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 619 ] concat
%I
286 258 306 278 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 509 ] concat
%I
296 388 296 368 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 509 ] concat
%I
286 398 296 418 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 539 ] concat
%I
286 398 296 418 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -7 509 ] concat
%I
286 398 296 418 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 479 ] concat
%I
286 398 296 418 Rect
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 396 a Fo(\(a\))-2 479 y
 9472573 5209910 11643371 42758144 26246922 50915082 startTexFig
 -2 479 a
%%BeginDocument: PRES/spreadn.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 177 650 399 774
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 224.5 867.5 ] concat
%I
[
(M1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 223.5 898.5 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 224.5 927.5 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 223.5 958.5 ] concat
%I
[
(M4)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -27 520 ] concat
%I
286 328 525 328 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -27 520 ] concat
%I
286 338 286 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -37 520 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 520 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 44 520 ] concat
%I
336 328 336 318 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 123 520 ] concat
%I
336 328 336 318 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 23 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 43 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 63 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 103 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 123 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 143 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 163 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 183 609 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 639 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 43 639 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 639 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 123 639 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 163 639 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 669 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 63 669 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 123 669 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 3 699 ] concat
%I
256 248 266 268 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 103 699 ] concat
%I
256 248 266 268 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 83 520 ] concat
%I
336 328 336 318 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 259 827 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 299 827 ] concat
%I
[
(4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 339 827 ] concat
%I
[
(8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 379 827 ] concat
%I
[
(12)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 418 827 ] concat
%I
[
(16)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 458 827 ] concat
%I
[
(20)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 868 a Fo(\(b\))-41 1001 y Fi(Figure)11 b(3.)g(Spreading)h(packet)f
(arrivals)g(to)g(reduce)-41 1051 y(the)g(buffer)i(requirement.)-91
1247 y Fo(at)g(the)g(output)f(link,)h(the)g(switch)g(checks)i(to)d(see)j(if)e
(the)g(count)g(of)-91 1297 y(the)g(newly)g(arrived)h(packet)g(is)f(at)h
(least)g Fn(k)e Fp(+)f Fo(1)i(greater)h(than)f(the)-91 1347
y(count)g(of)i(the)f(last)g(packet)h(dropped.)26 b(If)14 b(it)g(is,)h(the)g
(packet)f(with)-91 1396 y(the)c(lowest)g(count)f(that)h(is)g(at)g(least)g
Fn(k)g Fp(+)g Fo(1)g(greater)g(than)g(the)g(count)-91 1446
y(of)h(the)g(last)h(dropped)e(packet)i(is)f(dropped)g(from)g(that)g(stream.)
20 b(As)-91 1496 y(an)13 b(example,)h(suppose)e(that)g Fn(k)j
Fp(=)g Fo(10)d(and)h(the)f(count)g(of)g(the)h(last)-91 1546
y(packet)e(dropped)g(from)g(stream)h Fn(M)430 1552 y Fj(i)455
1546 y Fo(is)f(100.)18 b(Suppose)11 b(that)f(upon)-91 1596
y(arrival)f(of)h(the)g(1)n(15th)f(packet)i(from)e Fn(M)485
1602 y Fj(i)500 1596 y Fo(,)h(packets)h(numbered)f(105)-91
1645 y(through)f(1)n(14)h(are)h(buf)o(fered)g(at)g(the)f(switch)g(and)h
(there)f(is)h(no)f(more)-91 1695 y(buf)o(fer)d(space.)16 b(Under)7
b(the)h Fp(\()p Fo(1)p Fn(;)f(k)q Fp(\))g Fo(dropping)e(algorithm,)i(the)h(1)
n(1)n(1th)-91 1745 y(packet)f(from)g Fn(M)152 1751 y Fj(i)173
1745 y Fo(is)g(dropped)f(because)i(it)e(is)h(the)g(lowest)f(numbered)-91
1795 y(packet)11 b(whose)g(count)f(is)h(at)g(least)g Fn(k)f
Fp(+)g Fo(1)g(greater)i(than)e(the)h(count,)-91 1845 y(100,)g(of)h(the)f
(last)g(dropped)g(packet.)19 b(The)12 b(newly)f(arrived)g(packet,)-91
1894 y(number)f(1)n(15,)g(is)h(placed)f(in)g(the)g(buf)o(fer)g(just)f(freed.)
-41 1955 y(If)f(no)g(packet)h(can)g(be)g(dropped)f(from)g(the)h(stream)g(of)f
(the)h(newly)-91 2005 y(arrived)f(packet,)h(the)f(switch)g(looks)f(at)i(all)f
(other)f(streams)i(and)g(tries)-91 2054 y(to)14 b(\256nd)h(a)g(packet)g(from)
g(another)g(stream)g(that)f(can)i(be)f(dropped)-91 2104 y(without)f
(violating)h(the)h Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))17 b Fo(dropping)d
(requirement)j(of)f(that)-91 2154 y(stream.)f(If)9 b(such)h(a)g(stream)g(is)f
(found,)f(the)i(packet)f(with)f(the)h(small-)-91 2204 y(est)15
b(count)g(at)g(least)g Fn(k)e Fp(+)f Fo(1)j(greater)h(than)e(the)h(count)g
(of)g(the)g(last)-91 2254 y(dropped)e(packet)i(is)g(dropped.)26
b(The)16 b(order)e(in)g(which)g(the)g(other)-91 2303 y(streams)h(are)g
(examined)g(is)g(arbitrary)m(.)27 b(If)14 b(no)g(other)g(stream)i(can)-91
2353 y(be)c(found,)g(the)g(newly)g(arrived)g(packet)h(is)e(dropped)h(and)g(a)
h Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))-91 2403 y Fo(failure)j(occurs.)-41
2463 y(The)18 b(reason)g(the)g(dropping)e(algorithm)g(does)i(not)f(drop)g
(the)-91 2513 y(newly)f(arrived)h(packet,)j(even)d(if)g(it)f(meets)i(the)f
Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))17 b Fo(rule,)h(is)-91 2563
y(that)10 b(dropping)f(a)j(packet)f(with)f(a)h(lower)g(count)f(results)h(in)f
(greater)-91 2613 y(future)k(\257exibility)m(.)29 b(For)15
b(example,)j(suppose)d(that)g Fn(k)k Fp(=)g Fo(10,)e(no)-91
2663 y(packets)12 b(have)g(ever)g(been)f(dropped)g(from)g Fn(M)587
2669 y Fj(i)601 2663 y Fo(,)h(and)g(packets)g(100)987 42 y(through)e(1)n(10)i
(are)h(buf)o(fered)f(in)f(the)h(switch)f(when)h(the)g(1)n(1)n(1th)f(and)987
91 y(1)n(12th)c(packets)h(arrive)f(in)g(consecutive)h(slots.)14
b(If)7 b(there)h(is)f(no)g(space)987 141 y(available)12 b(and)g(we)h(only)e
(were)h(to)g(drop)f(newly)h(arrived)f(packets,)987 191 y(we)f(would)f(drop)g
(these)i(two)e(packets)h(and)g(cause)i(a)e Fp(\()p Fo(1)p Fn(;)d(k)q
Fp(\))j Fo(failure.)987 241 y(However)n(,)k(by)e(dropping)e(the)i(100th)f
(and)h(1)n(1)n(1th)g(packets)h(we)g(are)987 291 y(able)d(to)g(avoid)g(the)g
(failure.)987 419 y Fr(4.)j(Simulation)e(Results)1037 538 y
Fo(In)e(this)g(section,)g(we)h(present)g(simulation)e(results)h(for)g(our)g
(four)987 588 y(scheduling)g(algorithms,)g(the)h(packet-spreading)f
(technique,)h(and)987 638 y(the)f(two)f(packet-dropping)f(algorithms.)14
b(In)8 b(our)g(simulations,)h(the)987 688 y(message)18 b(streams)e(had)g
(identical)f(periods)h(of)f(500)g(slots.)32 b(The)987 738 y(number)19
b(of)g(packets)g(generated)h(in)e(the)h Fn(j)r Fo(-th)f(period)h(of)f(each)
987 787 y(stream)12 b Fn(M)1149 793 y Fj(i)1175 787 y Fo(is)f(the)g(random)g
(variable)g Fn(c)1577 793 y Fj(i;j)1628 787 y Fo(and)g(was)h(drawn)g(from)987
837 y(the)e(probability)d(distribution)f(shown)k(in)f(Figure)h(4a)g(and)g
(4b.)15 b(The)987 887 y(mean)9 b(number)f(of)g(packets)h(generated)f(per)g
(stream)h(per)f(period)g(ac-)987 937 y(cording)e(to)h(this)g(distributio)o(n)
e(is)i(21.7)g(and)g(the)h(maximum)f(number)987 987 y(generated)i(is)f(100.)14
b(The)9 b(variance)g(of)f(the)g(distribution)d(is)k(159)e(and)987
1037 y(the)12 b(coef)o(\256cient)g(of)f(variation)g(is)g(0.58.)20
b(This)11 b(traf)o(\256c)i(model)e(does)987 1086 y(not)c(intend)g(to)h
(represent)h(any)f(real)h(traf)o(\256c.)15 b(However)n(,)9
b(as)g(we)g(shall)987 1136 y(see)15 b(shortly)m(,)f(our)g(simulation)e
(results)i(and)g(the)g(conclusions)f(we)987 1186 y(can)e(draw)f(from)g(them)h
(do)f(not)f(depend)h(upon)g(the)g(exact)h(distribu-)987 1236
y(tion)c(of)g(the)h(individual)e(streams)j(but)e(instead)h(upon)f(the)h
(aggregate)987 1286 y(distribution)h(of)i Fn(n)h Fo(streams.)22
b(Because)13 b(the)f(numbers)g(of)g(packets)987 1335 y(per)k(message)h
(instance)f(of)g(dif)o(ferent)f(streams)i(are)f(statistically)987
1385 y(independent,)10 b(the)g(aggregate)h(distribution)c(approaches)k(a)g
(Gaus-)987 1435 y(sian,)g(or)f(normal)f(distribution.)987 1551
y Fh(4.1.)j(Scheduling)h(Algorithms)1037 1666 y Fo(W)m(e)f(begin)g(with)f
(the)h(results)g(for)f(the)i(scheduling)e(algorithms)987 1716
y(on)k(a)g(single)g(switch)g(which)f(transmits)h(packets)h(from)f
Fn(n)j Fp(=)h Fo(20)987 1766 y(message)10 b(streams.)15 b(T)m(able)8
b(1)g(shows)g(the)g(99\045,)g(99.9\045,)g(and)f(100\045)987
1816 y(response)13 b(times)g(for)g(message)h(instances)g(scheduled)f
(according)987 1865 y(to)k(the)g(BWRR,)h(WRR,)g(TT)m(,)g(and)g(FCFS)g
(algorithms)e(through)987 1915 y(one)d(switch.)24 b(In)13 b(the)g
(simulation,)g(the)g(phases)h(of)e(the)i(messages)987 1965
y(were)d(random,)f(and)g(the)g(packets)h(in)e(each)i(message)h(arrived)e
(con-)987 2015 y(tinuously)m(.)23 b(The)15 b(response)f(time)f(of)g(a)i
(message)g(was)f(measured)987 2065 y(as)j(the)g(time)f(between)h(the)g
(arrival)f(of)g(the)h(\256rst)f(packet)h(of)g(the)987 2115
y(message)c(and)f(the)f(transmission)f(time)h(of)h(the)f(last)g(packet)h(in)f
(the)987 2164 y(message.)28 b(W)m(e)14 b(generated)h(10)1450
2149 y Fm(5)1480 2164 y Fo(message)g(instances)g(from)e(each)987
2214 y(stream)c(\(approximately)e(the)h(number)g(of)f(messages)j(generated)f
(in)987 2264 y(one)k(hour)f(of)g(video)h(displayed)f(at)h(30)f(frames)i(per)f
(second\).)23 b(As)987 2314 y(can)16 b(be)f(seen)g(in)g(the)f(table,)j(when)d
(the)h(BWRR)f(algorithm)g(was)987 2364 y(used,)9 b(greater)g(than)f(one)h
(percent)f(of)g(the)h(message)h(instances)e(took)987 2413 y(longer)16
b(than)g(5,000)g(slots)f(to)h(complete)h(transmission.)33 b(When)987
2463 y(the)16 b(WRR)f(algorithm)g(was)i(used,)g(all)f(packets)h(were)f
(transmit-)987 2513 y(ted)g(within)f(820)h(slots.)33 b(When)16
b(the)h(TT)g(algorithm)e(was)i(used,)987 2563 y(all)12 b(packet)g(were)h
(transmitted)f(within)e(600)i(slots,)g(and)g(when)h(the)987
2613 y(packets)h(were)h(scheduled)f(according)g(to)f(the)h(FCFS)f(algorithm,)
987 2662 y(all)d(packets)h(were)g(transmitted)e(within)f(280)i(slots.)p
eop
%%Page: 6 6
5 bop -85 216 256 2 v -86 266 2 50 v -45 251 a Fn(c)-27 257
y Fj(i)p 27 266 V 55 251 a Fn(P)6 b Fp([)p Fn(c)118 257 y Fj(i)131
251 y Fp(])p 170 266 V -85 268 256 2 v -85 278 V -86 328 2
50 v -49 313 a Fo(10)p 27 328 V 59 w(0.300)p 170 328 V -85
329 256 2 v -86 379 2 50 v -49 364 a(20)p 27 379 V 59 w(0.457)p
170 379 V -85 381 256 2 v -86 431 2 50 v -49 416 a(30)p 27
431 V 59 w(0.125)p 170 431 V -85 432 256 2 v -86 482 2 50 v
-49 467 a(40)p 27 482 V 59 w(0.060)p 170 482 V -85 484 256
2 v -86 533 2 50 v -49 519 a(50)p 27 533 V 59 w(0.030)p 170
533 V -85 535 256 2 v -86 585 2 50 v -49 570 a(60)p 27 585
V 59 w(0.015)p 170 585 V -85 587 256 2 v -86 636 2 50 v -49
621 a(70)p 27 636 V 59 w(0.007)p 170 636 V -85 638 256 2 v
-86 688 2 50 v -49 673 a(80)p 27 688 V 59 w(0.003)p 170 688
V -85 690 256 2 v -86 739 2 50 v -49 724 a(90)p 27 739 V 59
w(0.002)p 170 739 V -85 741 256 2 v -86 791 2 50 v -60 776
a(100)p 27 791 V 49 w(0.001)p 170 791 V -85 792 256 2 v 11
868 a(\(a\))152 -31 y
 11840716 7104430 3289088 3289088 26970521 19866091 startTexFig
 152 -31 a
%%BeginDocument: PLOT/conv0.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot
%%DocumentFonts: Times-Roman
%%BoundingBox: 50 50 410 302
%%EndComments
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -60 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 180 scalefont setfont
newpath
LTa
1296 631 M
6921 631 L
1296 631 M
1296 4589 L
LTb
1296 631 M
1359 631 L
6921 631 M
6858 631 L
1188 631 M
(0) Rshow
1296 1027 M
1359 1027 L
6921 1027 M
6858 1027 L
1188 1027 M
(0.05) Rshow
1296 1423 M
1359 1423 L
6921 1423 M
6858 1423 L
1188 1423 M
(0.1) Rshow
1296 1818 M
1359 1818 L
6921 1818 M
6858 1818 L
1188 1818 M
(0.15) Rshow
1296 2214 M
1359 2214 L
6921 2214 M
6858 2214 L
1188 2214 M
(0.2) Rshow
1296 2610 M
1359 2610 L
6921 2610 M
6858 2610 L
1188 2610 M
(0.25) Rshow
1296 3006 M
1359 3006 L
6921 3006 M
6858 3006 L
1188 3006 M
(0.3) Rshow
1296 3402 M
1359 3402 L
6921 3402 M
6858 3402 L
1188 3402 M
(0.35) Rshow
1296 3797 M
1359 3797 L
6921 3797 M
6858 3797 L
1188 3797 M
(0.4) Rshow
1296 4193 M
1359 4193 L
6921 4193 M
6858 4193 L
1188 4193 M
(0.45) Rshow
1296 4589 M
1359 4589 L
6921 4589 M
6858 4589 L
1188 4589 M
(0.5) Rshow
1296 631 M
1296 694 L
1296 4589 M
1296 4526 L
1296 451 M
(0) Cshow
2319 631 M
2319 694 L
2319 4589 M
2319 4526 L
2319 451 M
(20) Cshow
3341 631 M
3341 694 L
3341 4589 M
3341 4526 L
3341 451 M
(40) Cshow
4364 631 M
4364 694 L
4364 4589 M
4364 4526 L
4364 451 M
(60) Cshow
5387 631 M
5387 694 L
5387 4589 M
5387 4526 L
5387 451 M
(80) Cshow
6410 631 M
6410 694 L
6410 4589 M
6410 4526 L
6410 451 M
(100) Cshow
LTb
1296 631 M
6921 631 L
6921 4589 L
1296 4589 L
1296 631 L
4108 271 M
(number of packets) Cshow
LT0
LT0
6318 4346 M
() Rshow
6426 4346 M
6750 4346 L
1807 3006 M
1807 3006 L
2319 4249 L
2830 1621 L
3341 1106 L
3853 868 L
4364 750 L
4876 686 L
5387 655 L
5898 647 L
6410 639 L
6534 4346 D
1807 3006 D
2319 4249 D
2830 1621 D
3341 1106 D
3853 868 D
4364 750 D
4876 686 D
5387 655 D
5898 647 D
6410 639 D
stroke
grestore
end
showpage
%%Trailer
%%EndDocument

 endTexFig
 495 479 a Fo(\(b\))152 477 y
 11840716 7104430 3289088 3289088 26970521 19866091 startTexFig
 152 477 a
%%BeginDocument: PLOT/conv19.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot
%%DocumentFonts: Times-Roman
%%BoundingBox: 50 50 410 302
%%EndComments
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -60 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 180 scalefont setfont
newpath
LTa
1296 631 M
6921 631 L
1296 631 M
1296 4589 L
LTb
1296 631 M
1359 631 L
6921 631 M
6858 631 L
1188 631 M
(0) Rshow
1296 1621 M
1359 1621 L
6921 1621 M
6858 1621 L
1188 1621 M
(0.05) Rshow
1296 2610 M
1359 2610 L
6921 2610 M
6858 2610 L
1188 2610 M
(0.1) Rshow
1296 3600 M
1359 3600 L
6921 3600 M
6858 3600 L
1188 3600 M
(0.15) Rshow
1296 4589 M
1359 4589 L
6921 4589 M
6858 4589 L
1188 4589 M
(0.2) Rshow
1296 631 M
1296 694 L
1296 4589 M
1296 4526 L
1296 451 M
(0) Cshow
2668 631 M
2668 694 L
2668 4589 M
2668 4526 L
2668 451 M
(500) Cshow
4040 631 M
4040 694 L
4040 4589 M
4040 4526 L
4040 451 M
(1000) Cshow
5412 631 M
5412 694 L
5412 4589 M
5412 4526 L
5412 451 M
(1500) Cshow
6784 631 M
6784 694 L
6784 4589 M
6784 4526 L
6784 451 M
(2000) Cshow
LTb
1296 631 M
6921 631 L
6921 4589 L
1296 4589 L
1296 631 L
4108 271 M
(number of packets) Cshow
LT0
LT0
6318 4346 M
() Rshow
6426 4346 M
6750 4346 L
1845 631 M
1845 631 L
1872 631 L
1900 631 L
1927 631 L
1955 631 L
1982 631 L
2009 631 L
2037 633 L
2064 636 L
2092 645 L
2119 663 L
2147 699 L
2174 758 L
2201 848 L
2229 971 L
2256 1125 L
2284 1303 L
2311 1490 L
2339 1671 L
2366 1830 L
2394 1953 L
2421 2031 L
2448 2060 L
2476 2042 L
2503 1982 L
2531 1889 L
2558 1772 L
2586 1641 L
2613 1506 L
2641 1373 L
2668 1247 L
2695 1134 L
2723 1034 L
2750 948 L
2778 877 L
2805 819 L
2833 773 L
2860 736 L
2887 708 L
2915 687 L
2942 671 L
2970 659 L
2997 651 L
3025 645 L
3052 640 L
3080 637 L
3107 635 L
3134 634 L
3162 633 L
3189 632 L
3217 632 L
3244 631 L
3272 631 L
3299 631 L
3326 631 L
3354 631 L
3381 631 L
3409 631 L
3436 631 L
3464 631 L
3491 631 L
3519 631 L
3546 631 L
3573 631 L
3601 631 L
3628 631 L
3656 631 L
3683 631 L
3711 631 L
3738 631 L
3766 631 L
3793 631 L
3820 631 L
3848 631 L
3875 631 L
3903 631 L
3930 631 L
3958 631 L
3985 631 L
4012 631 L
4040 631 L
4067 631 L
4095 631 L
4122 631 L
4150 631 L
4177 631 L
4205 631 L
4232 631 L
4259 631 L
4287 631 L
4314 631 L
4342 631 L
4369 631 L
4397 631 L
4424 631 L
4451 631 L
4479 631 L
4506 631 L
4534 631 L
4561 631 L
4589 631 L
4616 631 L
4644 631 L
4671 631 L
4698 631 L
4726 631 L
4753 631 L
4781 631 L
4808 631 L
4836 631 L
4863 631 L
4891 631 L
4918 631 L
4945 631 L
4973 631 L
5000 631 L
5028 631 L
5055 631 L
5083 631 L
5110 631 L
5137 631 L
5165 631 L
5192 631 L
5220 631 L
5247 631 L
5275 631 L
5302 631 L
5330 631 L
5357 631 L
5384 631 L
5412 631 L
5439 631 L
5467 631 L
5494 631 L
5522 631 L
5549 631 L
5576 631 L
5604 631 L
5631 631 L
5659 631 L
5686 631 L
5714 631 L
5741 631 L
5769 631 L
5796 631 L
5823 631 L
5851 631 L
5878 631 L
5906 631 L
5933 631 L
5961 631 L
5988 631 L
6016 631 L
6043 631 L
6070 631 L
6098 631 L
6125 631 L
6153 631 L
6180 631 L
6208 631 L
6235 631 L
6262 631 L
6290 631 L
6317 631 L
6345 631 L
6372 631 L
6400 631 L
6427 631 L
6455 631 L
6482 631 L
6509 631 L
6537 631 L
6564 631 L
6592 631 L
6619 631 L
6647 631 L
6674 631 L
6701 631 L
6729 631 L
6756 631 L
6784 631 L
6534 4346 D
1845 631 D
1872 631 D
1900 631 D
1927 631 D
1955 631 D
1982 631 D
2009 631 D
2037 633 D
2064 636 D
2092 645 D
2119 663 D
2147 699 D
2174 758 D
2201 848 D
2229 971 D
2256 1125 D
2284 1303 D
2311 1490 D
2339 1671 D
2366 1830 D
2394 1953 D
2421 2031 D
2448 2060 D
2476 2042 D
2503 1982 D
2531 1889 D
2558 1772 D
2586 1641 D
2613 1506 D
2641 1373 D
2668 1247 D
2695 1134 D
2723 1034 D
2750 948 D
2778 877 D
2805 819 D
2833 773 D
2860 736 D
2887 708 D
2915 687 D
2942 671 D
2970 659 D
2997 651 D
3025 645 D
3052 640 D
3080 637 D
3107 635 D
3134 634 D
3162 633 D
3189 632 D
3217 632 D
3244 631 D
3272 631 D
3299 631 D
3326 631 D
3354 631 D
3381 631 D
3409 631 D
3436 631 D
3464 631 D
3491 631 D
3519 631 D
3546 631 D
3573 631 D
3601 631 D
3628 631 D
3656 631 D
3683 631 D
3711 631 D
3738 631 D
3766 631 D
3793 631 D
3820 631 D
3848 631 D
3875 631 D
3903 631 D
3930 631 D
3958 631 D
3985 631 D
4012 631 D
4040 631 D
4067 631 D
4095 631 D
4122 631 D
4150 631 D
4177 631 D
4205 631 D
4232 631 D
4259 631 D
4287 631 D
4314 631 D
4342 631 D
4369 631 D
4397 631 D
4424 631 D
4451 631 D
4479 631 D
4506 631 D
4534 631 D
4561 631 D
4589 631 D
4616 631 D
4644 631 D
4671 631 D
4698 631 D
4726 631 D
4753 631 D
4781 631 D
4808 631 D
4836 631 D
4863 631 D
4891 631 D
4918 631 D
4945 631 D
4973 631 D
5000 631 D
5028 631 D
5055 631 D
5083 631 D
5110 631 D
5137 631 D
5165 631 D
5192 631 D
5220 631 D
5247 631 D
5275 631 D
5302 631 D
5330 631 D
5357 631 D
5384 631 D
5412 631 D
5439 631 D
5467 631 D
5494 631 D
5522 631 D
5549 631 D
5576 631 D
5604 631 D
5631 631 D
5659 631 D
5686 631 D
5714 631 D
5741 631 D
5769 631 D
5796 631 D
5823 631 D
5851 631 D
5878 631 D
5906 631 D
5933 631 D
5961 631 D
5988 631 D
6016 631 D
6043 631 D
6070 631 D
6098 631 D
6125 631 D
6153 631 D
6180 631 D
6208 631 D
6235 631 D
6262 631 D
6290 631 D
6317 631 D
6345 631 D
6372 631 D
6400 631 D
6427 631 D
6455 631 D
6482 631 D
6509 631 D
6537 631 D
6564 631 D
6592 631 D
6619 631 D
6647 631 D
6674 631 D
6701 631 D
6729 631 D
6756 631 D
6784 631 D
stroke
grestore
end
showpage
%%Trailer
%%EndDocument

 endTexFig
 495 986 a Fo(\(c\))-41 1119 y Fi(Figure)19 b(4.)g(Probability)f(density)h
(function)g(for)h Fn(c)830 1125 y Fj(i)-41 1169 y Fi(\(a\))10
b(and)h(\(b\).)16 b(Aggregate)c(density)f(function)g(for)g(20)-41
1219 y(streams)g(\(c\).)-41 1409 y Fo(The)h(very)g(poor)f(behavior)h(of)f
(the)h(BWRR)g(algorithm)e(can)j(be)-91 1459 y(explained)7 b(as)h(follows.)13
b(The)c(BWRR)e(scheduling)f(algorithm)h(was)-91 1509 y(designed)j(for)h(CBR)f
(real-time)h(traf)o(\256c)g(and)g(restricts)g(the)f(number)-91
1559 y(of)i(packets)i(transmitted)d(per)i(stream)g(to)g Fn(w)558
1565 y Fj(i)584 1559 y Fo(in)f(every)h(scheduler)-91 1608 y(cycle.)25
b(In)13 b(our)g(simulations,)g(we)h(admitted)f(each)h(stream)h(based)-91
1658 y(on)d(its)f(average)j(packet)e(generation)g(rate.)21
b(The)13 b(scheduler)g(cycle)-91 1708 y(time)f(was)h(100,)f(and)g(the)g
(weight)g(assigned)g(to)f(each)j(stream)f(was)-91 1758 y(5.)24
b(Therefore,)15 b(the)e(scheduler)g(transmits)g(5)g(packets)g(every)h(100)-91
1808 y(slots)8 b(from)h(each)h(stream.)15 b(If)9 b(a)g(stream)h(generates)f
(approximately)-91 1858 y(the)i(average)i(number)e(of)g(packets)i(per)e
(period,)h(the)f(switch)g(com-)-91 1907 y(pletes)f(the)h(transmission)f(of)g
(each)i(message)g(near)g(the)e(end)h(of)f(the)-91 1957 y(period.)23
b(However)n(,)15 b(if)d(a)i(stream)g(generates)g(packets)g(at)f(near)h(its)
-91 2007 y(peak)f(rate,)g(which)f(is)g(almost)h(5)f(times)g(higher)g(than)g
(the)g(average)-91 2057 y(rate,)i(the)f(switch)f(will)g(take)h(almost)f(5)h
(periods)f(to)g(complete)h(the)-91 2107 y(transmission)e(of)h(all)f(the)h
(packets)h(in)e(each)i(instance.)21 b(W)m(e)12 b(there-)-91
2156 y(fore)j(conclude)g(that)f(the)h(BWRR)f(algorithm)g(is)g(unlikely)g(to)g
(be)-91 2206 y(useful)g(for)g(transmitting)f(VBR)h(traf)o(\256c)h(unless)f
(the)h(streams)g(are)-91 2256 y(admitted)8 b(based)i(on)f(their)g(peak)h
(rates.)15 b(This,)10 b(however)n(,)g(will)e(lead)-91 2306
y(to)h(an)i(underutilization)c(of)j(the)g(network.)-41 2364
y(The)15 b(WRR)f(algorithm)f(performed)h(better)h(than)f(the)g(BWRR)-91
2413 y(algorithm)7 b(but)g(was)g(sti)o(ll)f(much)h(worse)g(th)o(an)g(the)g
(FC)o(FS)g(algori)o(thm.)-91 2463 y(The)f(example)g(in)g(Figure)g(5)g
(illustrates)g(the)g(reason)g(for)g(this.)13 b(Figure)-91 2513
y(5a)h(shows)g(4)g(periodic)g(messages)i(streams)f(with)e(periods)h(of)g(20)
-91 2563 y(slots)d(scheduled)g(according)g(to)g(the)h(WRR)f(algorithm.)17
b(The)c(\256rst)-91 2613 y(instance)h(of)f Fn(M)147 2619 y
Fm(1)178 2613 y Fo(arrives)g(at)h(time)g(0)f(and)h(has)g(12)g(packets.)26
b(The)-91 2662 y(second)10 b(instance)h(of)e Fn(M)265 2668
y Fm(1)292 2662 y Fo(arrives)i(at)f(time)g(20)g(and)g(has)g(5)g(packets.)p
1153 43 653 2 v 1152 93 2 50 v 1324 93 V 1375 78 a(99\045)p
1501 93 V 75 w(99.9\045)p 1658 93 V 49 w(100\045)p 1804 93
V 1153 95 653 2 v 1153 105 V 1152 154 2 50 v 1190 139 a(FCFS)p
1324 154 V 95 w(200)p 1501 154 V 104 w(260)p 1658 154 V 89
w(280)p 1804 154 V 1153 156 653 2 v 1152 206 2 50 v 1214 191
a(TT)p 1324 206 V 118 w(300)p 1501 206 V 104 w(560)p 1658 206
V 89 w(600)p 1804 206 V 1153 208 653 2 v 1152 257 2 50 v 1192
242 a(WRR)p 1324 257 V 95 w(300)p 1501 257 V 104 w(560)p 1658
257 V 89 w(820)p 1804 257 V 1153 259 653 2 v 1152 309 2 50
v 1178 294 a(BWRR)p 1324 309 V 49 w Fn(>)i Fo(5000)p 1501 309
V 1658 309 V 1804 309 V 1153 311 653 2 v 1037 387 a Fi(T)m(able)e(1.)f
(Response)i(time)e(distribution)h(for)g(FCFS,)1037 437 y(TT)-5
b(,)12 b(WRR,)f(and)h(BWRR.)987 659 y Fo(Instances)h(of)g Fn(M)1242
665 y Fm(2)1271 659 y Fo(arrive)g(at)g(times)f(5)h(and)g(25,)g(and)g(each)g
(have)h(5)987 709 y(packets.)i(The)11 b(scheduler)f(cycle)h(time)g
Fn(C)i Fo(is)d(20)g(and)g(the)g(assigned)987 759 y(weight)d(for)g(each)i
(stream)g(is)e(5.)15 b(The)8 b(times)g(of)f(transmission)g(of)h(the)987
809 y(12)i(packets)g(in)g(the)g(\256rst)g(instance)g(of)g Fn(M)1583
815 y Fm(1)1610 809 y Fo(are)h(shaded.)k(When)c(the)987 858
y(\256rst)c(instance)g(of)g Fn(M)1284 864 y Fm(1)1306 858 y
Fo(arrives,)h(the)f(scheduler)g(transmits)g(5)g(packets)987
908 y(and)13 b(then)g(moves)h(on)f(to)f(transmit)h(packets)h(from)f
Fn(M)1789 914 y Fm(2)1806 908 y Fo(,)h Fn(M)1870 914 y Fm(3)1887
908 y Fo(,)g(and)987 958 y Fn(M)1027 964 y Fm(4)1056 958 y
Fo(before)e(returning)f(to)h Fn(M)1424 964 y Fm(1)1440 958
y Fo(.)22 b(Thus,)13 b(from)f Fn(M)1711 964 y Fm(1)1728 958
y Fo(,)h(5)f(packets)h(are)987 1008 y(transmitted)h(by)h(time)h(5,)h(5)e
(more)h(packets)g(are)g(transmitted)f(by)987 1058 y(time)10
b(25,)g(and)h(the)f(\256nal)g(2)g(packets)h(are)g(transmitted)e(by)h(time)g
(42.)1037 1111 y(In)f(Figure)f(5b,)i(the)f(same)i(set)e(of)g(message)i
(instances)f(is)f(shown)987 1161 y(scheduled)k(according)h(to)e(the)i(FCFS)f
(algorithm.)23 b(Here,)16 b(the)d(12)987 1211 y(packets)k(from)f(the)g
(\256rst)g(instance)h(of)f Fn(M)1617 1217 y Fm(1)1650 1211
y Fo(arrive)g(\256rst)g(and)h(are)987 1261 y(therefore)12 b(transmitted)f(by)
h(time)g(12.)21 b(As)13 b(can)g(be)f(seen)h(from)g(the)987
1310 y(\256gure,)19 b(when)f(the)f(FCFS)g(scheduling)f(algorithm)g(is)h
(used,)j(all)987 1360 y(packets)15 b(from)f(all)g(message)i(instances)f(are)g
(transmitted)e(within)987 1410 y(12)d(slots)f(from)h(the)h(instant)e(they)g
(arrived.)1037 1463 y(The)17 b(performance)g(of)f(the)g(TT)i(algorithm)d(was)
i(better)f(than)987 1513 y(the)i(WRR)g(algorithm,)i(but)d(was)i(still)e
(worse)i(than)f(the)g(FCFS)987 1563 y(algorithm.)24 b(The)15
b(reason)f(the)g(TT)h(algorithm)d(performed)i(better)987 1613
y(than)d(the)g(WRR)g(algorithm)f(is)i(that)f(it)f(schedules)i(lar)o(ge)g
(bursts)f(of)987 1663 y(packets)i(earlier)n(.)21 b(When)12
b(the)h(WRR)e(algorithm)g(is)h(used,)i(unused)987 1712 y(bandwidth)9
b(results)i(in)f(a)i(shorter)e(scheduler)h(cycle)h(time,)f(but)g(the)987
1762 y(scheduler)g(still)f(only)g(transmits)g(at)i(most)f Fn(w)1643
1768 y Fj(i)1668 1762 y Fo(packets)g(from)g(each)987 1812 y(stream)i
Fn(M)1150 1818 y Fj(i)1177 1812 y Fo(in)f(each)i(cycle.)23
b(When)13 b(the)g(TT)g(algorithm)e(is)i(used,)987 1862 y(the)d(scheduler)g
(keeps)h(track)f(of)g(the)g(actual)g(scheduler)h(cycle)f(time)987
1912 y Fn(t)1002 1918 y Fj(cy)q(cle)1091 1912 y Fo(for)j(each)i(stream)f(and)
g(transmits)e Fn(w)1636 1918 y Fj(i)1663 1912 y Fo(packets)i(plus)f(up)g(to)
987 1962 y Fn(t)1002 1968 y Fj(cy)q(cle)1087 1962 y Fe(\000)d
Fn(w)1159 1968 y Fj(i)1183 1962 y Fo(more)g(packets)h(from)f
Fn(M)1544 1968 y Fj(i)1569 1962 y Fo(if)f Fn(t)1619 1968 y
Fj(cy)q(cle)1707 1962 y Fn(<)j(C)s Fo(.)1037 2015 y(In)g(the)h(example)h(in)e
(Figure)h(5,)g(if)g(the)g(relative)f(deadlines)h(for)987 2065
y(the)f(transmissions)g(of)g(the)g(packets)h(is)f(20)g(slots,)h(all)f
(packets)h(are)987 2115 y(transmitted)e(by)g(their)h(deadlines)f(when)h(the)g
(FCFS)g(algorithm)f(is)987 2164 y(used.)16 b(In)10 b(fact,)h(if)f(all)g
(packets)h(have)f(the)h(same)g(relative)f(deadline,)987 2214
y(the)16 b(FCFS)g(algorithm)f(will)g(yield)h(a)g(feasible)h(schedule)g(when-)
987 2264 y(ever)d(one)g(exists.)26 b(In)13 b(general,)j(we)e(want)g(to)f
(know)g(under)h(what)987 2314 y(conditions)e(a)i(feasible)g(schedule)f
(exists.)25 b(In)14 b(order)f(to)g(simplify)987 2364 y(the)e(discussion,)g
(we)h(assume)h(in)e(the)g(following)f(that)g(all)h(streams)987
2413 y(are)h(in)f(phase,)i(the)e(periods)g(of)g(all)g(the)h(message)h
(streams)f(are)h(the)987 2463 y(same,)f(and)e(that)f(the)h(relative)g
(deadlines)f(for)h(transmission)f(of)h(the)987 2513 y(packets)15
b(are)h(equal)f(to)f(the)g(period.)28 b(W)m(e)16 b(can)f(easily)g(see)h(that)
e(a)987 2563 y(feasible)9 b(schedule)h(exists)f(as)h(long)e(as)i(the)g(total)
e(number)h(of)g(pack-)987 2613 y(ets)i(generated)h(by)e(all)h(streams)h(in)e
(a)i(period)e(is)h(no)g(more)g(than)g(the)987 2663 y(number)j(of)g(slots)f
(in)g(the)h(period.)26 b(It)13 b(does)h(not)f(matter)i(whether)p
eop
%%Page: 7 7
6 bop -2 97 a
 11840716 3789027 7104430 43152834 30062264 50651955 startTexFig
 -2 97 a
%%BeginDocument: no_wrr.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 108 656 457 770
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -26 419 ] concat
%I
175 438 594 438 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -138.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -98.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -58.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -18.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 21.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 61.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 100.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 140.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 180.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 220.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -178.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 149.5 837.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 309.5 837.5 ] concat
%I
[
(20)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 390.5 837.5 ] concat
%I
[
(30)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 468.5 837.5 ] concat
%I
[
(40)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 548.5 837.5 ] concat
%I
[
(50)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -138.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -98.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 229.5 837.5 ] concat
%I
[
(10)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -58.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -18.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 21.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 179.5 956.5 ] concat
%I
[
(M2)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219.5 956.5 ] concat
%I
[
(M3)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 259.5 956.5 ] concat
%I
[
(M4)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 299.5 956.5 ] concat
%I
[
(M1)
(\(5\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 60.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 100.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 140.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 338.5 956.5 ] concat
%I
[
(M2)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 378.5 956.5 ] concat
%I
[
(M3)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 418.5 956.5 ] concat
%I
[
(M4)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 139.5 956.5 ] concat
%I
[
(M1)
(\(12\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 -71 564 ] concat
%I
220 303 260 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 250 604 ] concat
%I
220 263 240 283 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -81 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 89 564 ] concat
%I
220 303 260 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -41 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -1 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 79 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 118 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 158 564 ] concat
%I
270 303 310 323 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 199 884 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 239 882 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 280 882 ] concat
%I
[
(M4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 359 882 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 398 882 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 438 882 ] concat
%I
[
(M4)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 396 a Fo(\(a\))-2 451 y
 11840716 3789027 7104430 43152834 30062264 50651955 startTexFig
 -2 451 a
%%BeginDocument: why_fcfs.ps
%!PS-Adobe-2.0 EPSF-1.2
%%DocumentFonts: Helvetica
%%Pages: 1
%%BoundingBox: 108 656 457 770
%%EndComments

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

%%EndProlog

%I Idraw 7 Grid 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -26 419 ] concat
%I
175 438 594 438 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -138.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -98.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -58.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -18.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 21.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 61.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 100.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 140.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 180.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 220.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -178.5 493.5 ] concat
%I
328 364 328 354 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 149.5 837.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 309.5 837.5 ] concat
%I
[
(20)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 390.5 837.5 ] concat
%I
[
(30)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 468.5 837.5 ] concat
%I
[
(40)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 548.5 837.5 ] concat
%I
[
(50)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -138.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -98.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 229.5 837.5 ] concat
%I
[
(10)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -58.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -18.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 21.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 179.5 956.5 ] concat
%I
[
(M2)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 219.5 956.5 ] concat
%I
[
(M3)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 259.5 956.5 ] concat
%I
[
(M4)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 299.5 956.5 ] concat
%I
[
(M1)
(\(5\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 60.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 100.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 140.5 503.5 ] concat
%I
288 424 288 394 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 338.5 956.5 ] concat
%I
[
(M2)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 378.5 956.5 ] concat
%I
[
(M3)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 418.5 956.5 ] concat
%I
[
(M4)
(\(5\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 139.5 956.5 ] concat
%I
[
(M1)
(\(12\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
< 88 44 22 11 88 44 22 11 > -1 SetP
%I t
[ 1 0 0 1 -71 574 ] concat
%I
220 293 310 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -71 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -31 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 9 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 49 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 88 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 128 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 168 574 ] concat
%I
310 293 350 313 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 250 883 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 290 883 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 488 882 ] concat
%I
[
(M4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 369 882 ] concat
%I
[
(M1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 410 882 ] concat
%I
[
(M2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 450 882 ] concat
%I
[
(M3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-140-*
/Helvetica 14 SetF
%I t
[ 1 0 0 1 330 883 ] concat
%I
[
(M4)
] Text
End

End %I eop

showpage

%%Trailer

end
%%EndDocument

 endTexFig
 283 750 a Fo(\(b\))-41 883 y Fi(Figure)16 b(5.)f(Comparison)i(of)f(WRR)g
(\(a\))f(and)i(FCFS)-41 933 y(\(b\))11 b(algorithms.)-91 1112
y Fo(all)e(streams)h(generate)g(the)f(same)i(number)e(of)g(packets)h(or)f
(whether)-91 1162 y(one)j(stream)g(generates)h(more)f(packets)g(and)g(the)f
(others)h(generate)-91 1212 y(fewer)g(packets.)20 b(What)11
b(we)h(are)g(interested)f(in)g(is)h(the)f(probability)-91 1262
y(that)f(the)g(total)g(number)h(of)f(packets)h(generated)h(by)e(all)g
(streams)i(in)-91 1311 y(each)k(period)e(is)g(less)h(than)g(some)g(number)n
(.)28 b(Stated)15 b(dif)o(ferently)m(,)-91 1361 y(what)c(we)i(are)f
(interested)g(in)f(is)h(bounding)d(the)j(tail)f(of)g(the)h(aggre-)-91
1411 y(gate)i(probability)e(density)h(function)g(\(pdf\))h(which)g(results)f
(from)-91 1461 y(summing)d(the)g(individual)e(pdf)r(')n(s)h(of)h(the)g
(message)i(streams.)-41 1513 y(The)f(Central)g(Limit)f(Theorem)i(\(CL)l(T\))g
([14)o(])f(provides)f(the)h(so-)-91 1562 y(lution)f(to)i(this)g(problem.)21
b(The)13 b(CL)l(T)g(tells)f(us)g(that)g(the)g(sum)h(of)f Fn(n)-91
1612 y Fo(independent)c(random)i(variables)f(tends)g(toward)g(a)h(normal)f
(distri-)-91 1662 y(bution)j(regardless)j(of)e(the)h(shape)h(of)f(the)g
(original)e(distribution.)-91 1712 y(Moreover)n(,)f(it)f(tells)g(us)h(that)f
(this)g(is)h(true)f(even)i(when)e(the)h(original)-91 1762 y(distributio)o(ns)
g(are)j(not)f(drawn)g(from)g(the)g(same)i(probability)c(dis-)-91
1812 y(tribution.)i(Thus,)e(if)g(we)g(are)g(given)f(the)h(means)g(and)g
(variances)h(of)-91 1861 y(the)c(distributions)d(of)k(the)f(message)i
(streams)g(we)f(can)g(use)g(the)g(CL)l(T)-91 1911 y(to)g(bound)h(the)g(tail)f
(of)h(the)g(aggregate)h(pdf.)-41 1963 y(An)k(example)h(of)g(this)e(fact)i(is)
g(shown)f(in)g(Figure)g(4c,)j(which)-91 2013 y(shows)12 b(the)g(aggregate)h
(pdf)f(formed)g(by)g(performing)f(the)h(convo-)-91 2063 y(lution)c(of)h(20)g
(random)h(variables)g(each)h(having)e(the)g(pdf)h(in)f(Figure)-91
2112 y(4a.)21 b(From)12 b(this)g(\256gure,)h(it)e(is)h(clear)h(that)f(we)g
(can)h(allocate)g(an)f(ag-)-91 2162 y(gregate)j(bandwidth)e(for)i(the)g(20)f
(streams)i(which)f(is)g(much)g(less)-91 2212 y(than)d(the)g(sum)h(of)g(the)f
(peak)h(rates,)h(with)e(almost)g(arbitrarily)f(low)-91 2262
y(probability)6 b(of)i(generating)f(a)i(nonfeasible)f(schedule.)15
b(For)8 b(exam-)-91 2312 y(ple,)14 b(the)g(lar)o(gest)f(number)h(of)f
(packets)h(that)f(the)h(20)f(streams)i(can)-91 2362 y(produce)g(is)g(2,000,)h
(but)e(the)h(probability)d(of)j(this)f(happening)g(is)-91 2411
y(only)9 b(10)35 2396 y Fd(\000)p Fm(60)103 2411 y Fo(\(the)h(probability)e
(that)i(all)g(20)h(streams)g(produce)g(100)-91 2461 y(packets\),)g(which)f
(is)h(so)f(low)g(that)g(we)h(do)f(not)g(need)h(to)f(consider)g(it)-91
2511 y(in)f(a)i(practical)g(system)f(design.)-41 2563 y(T)m(able)15
b(2)g(shows)f(a)i(few)f(selected)h(values)e(related)h(to)g(the)f(cu-)-91
2613 y(mulative)f(distribution)e(function)h(of)i(the)g(aggregate)g(pdf)g
(shown)-91 2663 y(in)c(Figure)f(4c.)16 b(The)11 b(table)f(gives)g(the)h
(probability)c(that)j(more)h(than)p 1153 43 653 2 v 1152 93
2 50 v 1178 78 a(P[failure])p 1361 93 V 49 w(bandwidth)p 1586
93 V 100 w(link)p 1804 93 V 1152 143 V 1361 143 V 1400 128
a(allocated)p 1586 143 V 62 w(utilization)p 1804 143 V 1153
144 653 2 v 1153 154 V 1152 204 2 50 v 1215 189 a(10)1257 174
y Fd(\000)p Fm(3)p 1361 204 V 1443 189 a Fo(640)p 1586 204
V 152 w(68\045)p 1804 204 V 1153 206 653 2 v 1152 256 2 50
v 1215 241 a(10)1257 226 y Fd(\000)p Fm(4)p 1361 256 V 1443
241 a Fo(700)p 1586 256 V 152 w(62\045)p 1804 256 V 1153 257
653 2 v 1152 307 2 50 v 1215 292 a(10)1257 277 y Fd(\000)p
Fm(5)p 1361 307 V 1443 292 a Fo(740)p 1586 307 V 152 w(59\045)p
1804 307 V 1153 309 653 2 v 1152 359 2 50 v 1215 344 a(10)1257
329 y Fd(\000)p Fm(6)p 1361 359 V 1443 344 a Fo(780)p 1586
359 V 152 w(56\045)p 1804 359 V 1153 360 653 2 v 1152 410 2
50 v 1215 395 a(10)1257 380 y Fd(\000)p Fm(7)p 1361 410 V 1443
395 a Fo(800)p 1586 410 V 152 w(54\045)p 1804 410 V 1153 412
653 2 v 1152 462 2 50 v 1208 447 a(10)1250 432 y Fd(\000)p
Fm(60)p 1361 462 V 1433 447 a Fo(2000)p 1586 462 V 141 w(22\045)p
1804 462 V 1153 463 653 2 v 1037 539 a Fi(T)m(able)h(2.)f(Probability)h(of)g
(generating)h(a)f(nonfeasi-)1037 589 y(ble)7 b(schedule)i(from)e(the)h
(aggregate)h(density)f(func-)1037 639 y(tion.)987 858 y Fo(some)16
b(number)e(of)h(packets)g(are)h(produced)e(by)h(the)g(20)f(streams.)987
908 y(For)9 b(example,)i(the)e(probability)e(that)i(more)h(than)f(640)g
(packets)h(are)987 958 y(produced)d(by)g(the)g(20)g(message)i(streams)f(is)g
(less)f(than)g(10)1813 943 y Fd(\000)p Fm(3)1855 958 y Fo(.)15
b(T)m(able)987 1008 y(2)9 b(also)g(shows)h(the)f(utilization)e(of)i(the)g
(network)f(for)h(each)h(value)g(of)987 1057 y(allocated)j(network)e
(bandwidth.)21 b(For)13 b(example,)h(if)f(we)g(desire)g(a)987
1107 y(failure)c(probability)d(of)j(10)1382 1092 y Fd(\000)p
Fm(3)1425 1107 y Fo(,)h(the)f(scheduler)g(must)g(transmit)g(640)987
1157 y(packets)g(within)e(the)i(stream)h(period)e(of)g(500)h(time)f(units.)14
b(Because)987 1207 y(the)k(mean)g(number)g(of)g(packets)g(generated)g(is)g
(434)f(\(20)g(times)987 1257 y(21.7\),)9 b(this)f(results)g(in)h(a)g(link)e
(utilization)g(is)h(68\045.)14 b(The)c(important)987 1306 y(point)f(to)h
(notice)g(from)g(this)g(table)g(is)h(that)f(the)g(probability)e(of)i(fail-)
987 1356 y(ure)e(can)g(be)h(reduced)f(by)f(an)i(order)e(of)h(magnitude)f(by)g
(reducing)h(the)987 1406 y(link)j(utilization)e(by)j(a)g(few)h(percentage)f
(points.)19 b(Moreover)n(,)13 b(this)987 1456 y(is)e(true)g(because)i(of)f
(the)f(shape)h(of)f(the)g(normal)h(distributio)o(n,)d(and)987
1506 y(since)g(the)g(sum)g(of)g(a)g(suf)o(\256cient)g(number)g(of)g
(independent)e(random)987 1556 y(variables)13 b(tends)h(toward)e(the)i
(normal)f(distributio)o(n,)f(this)h(is)g(true)987 1605 y(regardless)e(of)f
(the)g(original)e(pdf)r(')n(s)i(of)g(the)g(streams.)1037 1661
y(Of)k(course,)i(the)f(actual)f(achievable)h(utilization)d(for)i(a)h(given)
987 1711 y(failure)i(probability)e(does)j(depend)g(on)f(the)h(number)f(of)h
(multi-)987 1760 y(plexed)12 b(streams)h(and)f(the)g(exact)h(density)e
(functions)g(of)h(the)g(indi-)987 1810 y(vidual)i(streams.)33
b(For)15 b(example,)j(for)d(a)i(failure)e(probability)e(of)987
1860 y(10)1029 1845 y Fd(\000)p Fm(3)1086 1860 y Fo(the)i(achievable)g
(utilization)e(for)h Fn(n)h Fo(multiplexed)e(streams)987 1910
y(each)19 b(with)f(density)f(function)g(equal)h(to)g(that)f(in)h(Figure)g(4a)
h(is)987 1960 y(shown)9 b(in)g(Figure)f(6.)15 b(This)10 b(\256gure)f(shows)g
(that)g(when)g(the)g(number)987 2009 y(of)g(multiplexed)f(streams)i(is)g
(small,)g(admission)f(must)g(be)h(done)f(on)987 2059 y(a)g(rate)g(close)f(to)
g(the)g(peak)h(rate,)h(but)d(when)i(the)f(number)g(of)g(streams)987
2109 y(increases,)14 b(admission)e(can)h(be)g(done)f(on)g(a)h(rate)g(that)f
(gets)g(closer)987 2159 y(to)e(the)g(average)h(rate.)1037 2214
y(What)e(the)g(results)g(of)g(this)f(section)h(indicate)f(is)h(that)g(the)g
(failure)987 2264 y(rate)16 b(of)f(the)g(switch)g(is)g(very)h(sensitive)e(to)
h(the)g(link)g(utilization.)987 2314 y(This)f(poses)h(a)g(potentially)c
(serious)j(problem)g(to)g(the)g(admission)987 2364 y(control)i(process)i
(because)h(the)e(performance)h(can)g(very)f(easily)987 2413
y(change)7 b(from)g(being)g(quite)g(good)g(t)o(o)g(very)g(bad)g(wi)o(th)f
(the)h(admission)987 2463 y(of)18 b(one)h(more)g(message)h(stream.)41
b(The)19 b(main)f(dif)o(\256culty)f(with)987 2513 y(admission)12
b(control)g(of)g(VBR)h(traf)o(\256c)g(is)g(that)f(it)g(is)h(very)f(unlikely)
987 2563 y(that)g(the)g(traf)o(\256c)h(can)g(be)g(speci\256ed)g(accurately)h
(enough)d(to)h(make)987 2613 y(appropriate)7 b(admission)g(decisions)f(using)
o(,)f(for)i(example,)g(the)g(CL)l(T)987 2663 y(to)12 b(bound)g(the)h(failure)
f(probability)m(,)g(i.e.,)j(even)e(if)f(the)h(mean)h(rate)p
eop
%%Page: 8 8
7 bop -91 46 a
 16577003 11840716 3289088 3289088 26970521 19866091 startTexFig
 -91 46 a
%%BeginDocument: PLOT/util_hist.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot
%%DocumentFonts: Times-Roman
%%BoundingBox: 50 50 410 302
%%EndComments
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -60 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 180 scalefont setfont
newpath
LTa
1296 631 M
6921 631 L
1296 631 M
1296 4589 L
LTb
1296 631 M
1359 631 L
6921 631 M
6858 631 L
1188 631 M
(0) Rshow
1296 1423 M
1359 1423 L
6921 1423 M
6858 1423 L
1188 1423 M
(0.2) Rshow
1296 2214 M
1359 2214 L
6921 2214 M
6858 2214 L
1188 2214 M
(0.4) Rshow
1296 3006 M
1359 3006 L
6921 3006 M
6858 3006 L
1188 3006 M
(0.6) Rshow
1296 3797 M
1359 3797 L
6921 3797 M
6858 3797 L
1188 3797 M
(0.8) Rshow
1296 4589 M
1359 4589 L
6921 4589 M
6858 4589 L
1188 4589 M
(1) Rshow
1296 631 M
1296 694 L
1296 4589 M
1296 4526 L
1296 451 M
(0) Cshow
1999 631 M
1999 694 L
1999 4589 M
1999 4526 L
1999 451 M
(5) Cshow
2702 631 M
2702 694 L
2702 4589 M
2702 4526 L
2702 451 M
(10) Cshow
3405 631 M
3405 694 L
3405 4589 M
3405 4526 L
3405 451 M
(15) Cshow
4109 631 M
4109 694 L
4109 4589 M
4109 4526 L
4109 451 M
(20) Cshow
4812 631 M
4812 694 L
4812 4589 M
4812 4526 L
4812 451 M
(25) Cshow
5515 631 M
5515 694 L
5515 4589 M
5515 4526 L
5515 451 M
(30) Cshow
6218 631 M
6218 694 L
6218 4589 M
6218 4526 L
6218 451 M
(35) Cshow
6921 631 M
6921 694 L
6921 4589 M
6921 4526 L
6921 451 M
(40) Cshow
LTb
1296 631 M
6921 631 L
6921 4589 L
1296 4589 L
1296 631 L
180 2610 M
currentpoint gsave translate 90 rotate 0 0 moveto
(achievable utilization) Cshow
grestore
4108 271 M
(number of streams) Cshow
LT0
LT0
6318 4346 M
() Rshow
6426 4346 M
6750 4346 L
1437 1408 M
1437 1408 L
1577 1826 L
1718 2088 L
1859 2185 L
1999 2320 L
2140 2496 L
2280 2573 L
2421 2636 L
2562 2688 L
2702 2789 L
2843 2822 L
2984 2851 L
3124 2927 L
3265 2945 L
3405 3009 L
3546 3022 L
3687 3077 L
3827 3085 L
3968 3133 L
4109 3178 L
4249 3180 L
4390 3221 L
4530 3221 L
4671 3257 L
4812 3256 L
4952 3289 L
5093 3320 L
5234 3317 L
5374 3346 L
5515 3373 L
5655 3368 L
5796 3394 L
5937 3418 L
6077 3412 L
6218 3434 L
6359 3456 L
6534 4346 D
1437 1408 D
1577 1826 D
1718 2088 D
1859 2185 D
1999 2320 D
2140 2496 D
2280 2573 D
2421 2636 D
2562 2688 D
2702 2789 D
2843 2822 D
2984 2851 D
3124 2927 D
3265 2945 D
3405 3009 D
3546 3022 D
3687 3077 D
3827 3085 D
3968 3133 D
4109 3178 D
4249 3180 D
4390 3221 D
4530 3221 D
4671 3257 D
4812 3256 D
4952 3289 D
5093 3320 D
5234 3317 D
5374 3346 D
5515 3373 D
5655 3368 D
5796 3394 D
5937 3418 D
6077 3412 D
6218 3434 D
6359 3456 D
stroke
grestore
end
showpage
%%Trailer
%%EndDocument

 endTexFig
 -41 887 a Fi(Figure)10 b(6.)g(Achievable)g(utilization)f(with)h
Fc(P)p Fi(\(failure\))-41 937 y Fe(\024)h Fo(10)44 922 y Fd(\000)p
Fm(3)86 937 y Fi(.)p 59 1124 684 2 v 58 1174 2 50 v 129 1159
a Fo(phase)p 293 1174 V 96 w(spread)p 451 1174 V 50 w(required)e(space)p
742 1174 V 59 1175 684 2 v 59 1185 V 58 1235 2 50 v 155 1220
a(IN)p 293 1235 V 144 w(NO)p 451 1235 V 163 w(572)p 742 1235
V 59 1237 684 2 v 58 1287 2 50 v 155 1272 a(IN)p 293 1287 V
135 w(YES)p 451 1287 V 154 w(192)p 742 1287 V 59 1288 684 2
v 58 1338 2 50 v 84 1323 a(RANDOM)p 293 1338 V 74 w(NO)p 451
1338 V 163 w(224)p 742 1338 V 59 1340 684 2 v 58 1390 2 50
v 84 1375 a(RANDOM)p 293 1390 V 65 w(YES)p 451 1390 V 154 w(129)p
742 1390 V 59 1391 684 2 v -41 1467 a Fi(T)m(able)28 b(3.)f(Buffer)h(space)g
(required)h(using)f(the)-41 1517 y(packet-spreading)13 b(technique.)-91
1739 y Fo(is)d(known)g(the)g(variance)i(probably)d(isn')o(t)h(and)h
(therefore)f(the)h(CL)l(T)-91 1789 y(cannot)f(be)g(applied.)-91
1900 y Fh(4.2.)i(T)m(raf\256c)g(Shaping)-41 2012 y Fo(Buf)o(fer)d(space)i(in)
e(a)i(switch)e(is)h(likely)e(to)h(be)h(a)h(scarce)g(resource.)-91
2062 y(The)e(primary)f(reason)i(for)e(this)g(is)g(that)g(the)h(memory)g(is)g
(expensive.)-91 2112 y(This)f(is)g(especially)g(true)g(in)g(a)h(high)e(speed)
i(switch)f(with)f(\256ber)h(optic)-91 2162 y(links)e(because)j(the)e(rate)h
(of)f(transmission)f(may)i(require)f(expensive)-91 2211 y(fast)13
b(memory)m(.)25 b(In)12 b(addition)g(to)g(economic)i(factors,)g(if)f(we)g
(use)h(a)-91 2261 y(FCFS)g(scheduler)n(,)i(reducing)e(the)g(amount)g(of)g
(buf)o(fer)g(space)i(has)-91 2311 y(two)8 b(other)g(bene\256cial)h(results.)
14 b(First,)9 b(since)g(the)f(maximum)h(delay)-91 2361 y(through)k(a)i
(switch)g(is)f(proportional)e(to)i(the)h(number)g(of)f(buf)o(fers)-91
2411 y(in)h(the)h(switch,)h(reducing)f(the)f(buf)o(fer)h(size)h(reduces)g
(the)f(delay)m(.)-91 2461 y(Second,)j(the)e(maximum)h(jitter)d(that)i(a)g
(message)i(instance)f(can)-91 2510 y(incur)c(is)g(equal)h(to)f(the)g(dif)o
(ference)h(between)g(the)g(longest)e(delay)-91 2560 y(and)f(the)f(shortest)g
(delay;)h(thus,)g(reducing)f(the)h(buf)o(fer)f(space)i(also)-91
2610 y(reduces)e(the)f(jitter)n(.)-41 2663 y(W)m(e)18 b(begin)g(with)f
(results)g(on)h(the)g(ef)o(fects)h(of)f(stream)h(phase)p 1086
2 786 2 v 1085 51 2 50 v 1229 51 V 1290 37 a(LIFD)p 1443 51
V 122 w Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))p 1657 51 V 120 w
Fo(LIFD)p 1871 51 V 1085 101 V 1146 86 a Fn(k)p 1229 101 V
94 w Fo(dropping)p 1443 101 V 62 w(dropping)p 1657 101 V 62
w(dropping)p 1871 101 V 1085 151 V 1229 151 V 1254 136 a Fn(U)17
b Fp(=)12 b Fo(88\045)p 1443 151 V 49 w Fn(U)k Fp(=)c Fo(88\045)p
1657 151 V 49 w Fn(U)k Fp(=)c Fo(84\045)p 1871 151 V 1086 153
786 2 v 1086 163 V 1085 213 2 50 v 1137 198 a Fe(1)p 1229 213
V 121 w Fo(17)p Fn(:)p Fo(7)p 1443 213 V 139 w(17)p Fn(:)p
Fo(7)p 1657 213 V 149 w(4)p Fn(:)p Fo(3)p 1871 213 V 1086 214
786 2 v 1085 264 2 50 v 1111 249 a(1,000)p 1229 264 V 95 w(17)p
Fn(:)p Fo(2)p 1443 264 V 139 w(16)p Fn(:)p Fo(6)p 1657 264
V 149 w(4)p Fn(:)p Fo(2)p 1871 264 V 1086 266 786 2 v 1085
315 2 50 v 1127 301 a(500)p 1229 315 V 110 w(13)p Fn(:)p Fo(7)p
1443 315 V 140 w(1)n(1)p Fn(:)p Fo(4)p 1657 315 V 150 w(2)p
Fn(:)p Fo(2)p 1871 315 V 1086 317 786 2 v 1085 367 2 50 v 1127
352 a(100)p 1229 367 V 110 w(13)p Fn(:)p Fo(5)p 1443 367 V
139 w(10)p Fn(:)p Fo(8)p 1657 367 V 149 w(2)p Fn(:)p Fo(1)p
1871 367 V 1086 369 786 2 v 1085 418 2 50 v 1137 403 a(50)p
1229 418 V 121 w(12)p Fn(:)p Fo(5)p 1443 418 V 149 w(9)p Fn(:)p
Fo(1)p 1657 418 V 160 w(1)p Fn(:)p Fo(7)p 1871 418 V 1086 420
786 2 v 1037 500 a Fi(T)m(able)i(4.)f Fp(\()p Fo(1)p Fn(;)7
b(k)q Fp(\))13 b Fi(failure)h(rates)g(\(multiplied)e(by)j Fo(10)1892
485 y Fm(4)1908 500 y Fi(\))1037 550 y(for)d(different)f(values)h(of)g
Fn(k)q Fi(.)987 759 y Fo(and)e(the)f(amount)g(by)h(which)f(spreading)g
(packet)h(arrivals)f(over)h(the)987 809 y(stream)f(period)f(reduces)h(the)f
(buf)o(fer)g(space)i(requirement.)k(T)m(able)c(3)987 859 y(shows)f(the)g
(results.)15 b(In)9 b(our)f(simulations,)h(the)g(transmission)f(rates)987
909 y(of)15 b(the)g(input)e(and)i(output)e(links)h(are)i(the)f(same.)31
b(As)15 b(expected,)987 959 y(the)i(worst)h(case)h(is)e(when)h(all)f(streams)
i(are)f(in)f(phase)i(and)f(the)987 1008 y(packets)f(arrive)g(at)g(the)f
(switch)h(one)g(after)g(the)f(other)n(,)j(i.e.,)g(one)987 1058
y(per)11 b(slot.)16 b(When)11 b(the)g(packets')g(arrival)g(times)g(are)g
(evenly)g(spread)987 1108 y(over)j(the)g(streams')h(periods,)g(the)e(buf)o
(fer)h(space)i(requirement)e(is)987 1158 y(reduced)j(by)e(66\045.)32
b(When)17 b(the)f(streams')h(phases)g(are)f(random)987 1208
y(and)d(the)g(packets')h(arrival)f(pattern)g(is)g(spread,)i(the)e(buf)o(fer)g
(space)987 1257 y(requirement)d(is)g(reduced)h(by)f(77\045.)987
1362 y Fh(4.3.)i(Packet-Dr)o(opping)h(Algorithms)1037 1467
y Fo(W)m(e)19 b(now)g(present)g(simulation)f(results)h(on)g(the)g(achievable)
987 1517 y Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))g Fo(failure)g(rate)g(when)h
(the)f(LIFD)h(and)f Fp(\()p Fo(1)p Fn(;)g(k)q Fp(\))g Fo(packet-dropping)987
1566 y(algorithms)f(are)i(used)g(in)f(the)g(switch.)14 b(Note)7
b(that)g(the)g Fp(\()p Fo(1)p Fn(;)g(k)q Fp(\))g Fo(failure)987
1616 y(rate)i(is)g(the)g(number)f(of)h(times)g(the)g(switch)f(fails)h(to)f
(deliver)g(at)h(least)987 1666 y Fn(k)f Fo(consecutive)f(packets)h(divided)e
(by)g(the)h(total)f(number)h(of)g(packets)987 1716 y(sent.)20
b(T)m(able)13 b(4)f(shows)g(the)f Fp(\()p Fo(1)p Fn(;)c(k)q
Fp(\))12 b Fo(failure)f(rates)i(for)e(20)h(message)987 1766
y(streams)g(transmitted)e(through)f(a)j(single)e(switch.)17
b(The)12 b(phases)g(of)987 1815 y(the)c(message)h(streams)g(were)g(random)f
(and)g(packet)g(spreading)g(was)987 1865 y(not)j(used.)19 b(The)12
b(period)f(of)g(the)h(message)h(streams)f(was)h(500,)e(and)987
1915 y(the)f(number)h(of)g(buf)o(fers)f(in)g(the)h(switch)f(was)h(90.)17
b(In)10 b(the)h(\256rst)f(two)987 1965 y(columns,)j(number)f(of)f(packets)i
(in)f(each)h(message)h(instance)e(was)987 2015 y(taken)h(from)g(the)g
(distribution)d(shown)j(in)f(Figure)h(4a.)24 b(Since)14 b(the)987
2064 y(mean)f(number)f(of)g(packets)g(produced)g(per)g(instance)g(is)g
(approxi-)987 2114 y(mately)h(22,)g(the)f(link)f(utilization)f(is)i(88\045.)
22 b(The)13 b(\256rst)f(column)g(in)987 2164 y(the)f(table)f(shows)h(the)g
Fp(\()p Fo(1)p Fn(;)c(k)q Fp(\))k Fo(failure)f(rate)h(when)g(the)g(LIFD)g
(drop-)987 2214 y(ping)i(algorithm)g(is)h(used.)27 b(As)14
b Fn(k)i Fo(gets)e(smaller)n(,)i(the)e(acceptable)987 2264
y(loss)g(rate)h(gets)g(higher;)h(therefore,)g(the)f(failure)f(rate)h
(decreases.)987 2314 y(Note)10 b(that)g(when)g Fn(k)i Fp(=)g
Fe(1)p Fo(,)e(no)g(dropped)g(packets)h(are)g(acceptable,)987
2363 y(and)h(every)g(packet)h(dropped)e(counts)h(in)f(the)h(failure)g(rate.)
21 b(In)12 b(the)987 2413 y(second)k(column,)h(we)f(show)f(the)g(failure)g
(rate)h(when)g(the)f Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))987
2463 y Fo(packet-dropping)g(algorithm)g(was)i(used)g(in)e(the)i(switch.)14
b(For)8 b(each)987 2513 y(value)i(of)g Fn(k)q Fo(,)h(the)f
Fp(\()p Fo(1)p Fn(;)d(k)q Fp(\))j Fo(failure)f(rate)i(is)f(shown.)1037
2563 y(In)j(the)g(third)f(column,)j(the)e(switch)g(utilization)e(was)k
(lowered)987 2613 y(to)10 b(84\045)h(by)g(reducing)f(the)h(mean)h(number)f
(of)g(packets)h(generated)987 2662 y(per)18 b(message)i(instance)f(to)f(21.)
39 b(W)m(e)18 b(did)g(this)f(by)h(generating)p eop
%%Page: 9 9
8 bop -91 42 a Fo(one)16 b(less)h(packet)g(per)f(row)g(from)g(the)g
(probability)e(distributio)o(n)-91 91 y(shown)d(in)f(Figure)h(4a.)19
b(When)11 b(this)g(is)g(done,)h(for)e(all)h(values)h(of)f Fn(k)q
Fo(,)-91 141 y(the)i(failure)f(rates)i(are)g(lower)e(than)h(the)g(failure)g
(rates)g(in)g(the)g(\256rst)-91 191 y(and)g(second)g(columns.)24
b(This)13 b(result)f(shows)h(that)f(if)h(we)g(wish)g(to)-91
241 y(achieve)h(a)g(lower)e(failure)h(rate,)i(we)e(are)h(better)f(of)o(f)g
(by)g(lowering)-91 291 y(the)e(switch)g(utilization)e(by)i(a)h(few)f
(percentage)i(points)d(and)h(using)-91 340 y(the)c(LIFD)h(algorithm)e(than)h
(by)g(using)f(the)h Fp(\()p Fo(1)p Fn(;)g(k)q Fp(\))g Fo(packet-dropping)-91
390 y(algorithm.)-41 441 y(The)14 b(explanation)e(for)g(this)h(result)g(can)h
(be)f(seen)h(by)f(examing)-91 490 y(T)m(able)18 b(2)f(which)g(shows)g(the)g
(probability)d(of)j(generating)g(more)-91 540 y(than)c(a)i(certain)f(number)g
(of)g(packets)h(for)e(20)h(message)i(streams.)-91 590 y(W)m(e)7
b(see)h(that)e(if)h(we)g(increase)h(the)f(bandwidth)e(by)i(a)g(few)g
(percentage)-91 640 y(points,)g(say)i(from)f(750)f(to)h(790,)g(and)g(thereby)
g(decrease)i(the)e(switch)-91 690 y(utilization,)k(the)h(probability)e(of)i
(generating)g(an)h(overrun)e(of)h(the)-91 740 y(number)g(of)f(packets)h
(decreases)i(by)e(an)g(order)f(of)h(magnitude.)22 b(It)-91
789 y(is)15 b(exactly)h(this)f(ef)o(fect)i(that)e(we)i(see)f(in)g(T)m(able)g
(4.)32 b(By)16 b(slightly)-91 839 y(decreasing)d(the)f(link)f(utilization,)g
(we)i(decrease)i(the)d(probability)-91 889 y(of)f Fp(\()p Fo(1)p
Fn(;)c(k)q Fp(\))k Fo(dropping)e(failure)i(by)h(a)g(lar)o(ger)f(amount)g
(than)g(what)h(we)-91 939 y(can)f(achieve)g(by)e(implementing)g(the)h
Fp(\()p Fo(1)p Fn(;)d(k)q Fp(\))j Fo(dropping)e(algorithm)-91
989 y(in)h(the)i(switch.)-41 1039 y(The)17 b Fp(\()p Fo(1)p
Fn(;)7 b(k)q Fp(\))17 b Fo(packet-dropping)e(algorithm)g(we)j(described)f(in)
-91 1089 y(section)7 b(3.3)g(is)h(fairly)e(complex.)15 b(W)m(e)7
b(believe)h(that)f(including)e(such)-91 1139 y(a)j(complex)g(algorithm)f(in)h
(the)f(switch)h(will)f(likely)f(limit)h(the)h(rate)g(at)-91
1189 y(which)h(packets)i(can)g(be)f(transmitted,)f(thus)h(ef)o(fectively)g
(lowering)-91 1238 y(the)f(switch)g(utilization)e(by)i(a)i(comparable)f
(amount)f(to)g(that)g(in)g(our)-91 1288 y(simulations.)k(Therefore,)d(it)e
(does)h(not)f(appear)h(that)f(including)e(the)-91 1338 y Fp(\()p
Fo(1)p Fn(;)h(k)q Fp(\))i Fo(packet-dropping)g(algorithm)f(has)j(any)f
(bene\256cial)g(results.)-91 1456 y Fr(5.)j(Conclusion)-41
1566 y Fo(In)8 b(this)h(paper)n(,)h(we)g(discussed)f(scheduling)f
(algorithms,)h(traf)o(\256c)-91 1616 y(shaping,)18 b(and)f(packet-dropping)e
(algorithms)g(for)i(transmitting)-91 1666 y(soft-real-time)g(VBR)g(traf)o
(\256c)h(in)g(a)g(packet-switched)g(network.)-91 1715 y(W)m(e)12
b(compared)h(the)f(performance)h(of)f(the)g(timed-token)f(\(TT\))h(al-)-91
1765 y(gorithm)5 b(as)j(well)f(as)h(two)e(other)h(real-time)g(scheduling)f
(algorithms)-91 1815 y(with)13 b(the)g(FCFS)h(algorithm.)25
b(W)m(e)14 b(found)f(that)g(among)h(the)g(real-)-91 1865 y(time)9
b(algorithms,)f(the)h(TT)h(algorithm)d(performed)i(the)g(best,)h(but)e(it)-91
1915 y(was)i(still)e(worse)h(than)g(the)h(FCFS)f(algorithm.)k(The)e(problem)d
(with)-91 1964 y(the)f(real-time)h(algorithms)f(is)g(that)h(when)f(streams)i
(are)g(admitted)e(to)-91 2014 y(the)j(network)f(at)i(a)f(utilization)e(close)
j(to)e(their)h(average)h(rate,)g(lar)o(ge)-91 2064 y(delays)h(are)g
(experienced)h(by)e(the)h(particular)f(message)i(instances)-91
2114 y(that)c(contain)h(lar)o(ge)h(numbers)f(of)g(packets.)-41
2164 y(When)j(all)h(relative)f(deadlines)g(are)i(the)e(same,)j(the)e(FCFS)f
(al-)-91 2214 y(gorithm)g(is)i(equivalent)f(to)g(the)h(optimal)e
(earliest-deadline-\256rst)-91 2264 y(\(EDF\))h(algorithm.)27
b(Thus,)16 b(the)e(FCFS)h(algorithm)e(is)h(also)h(opti-)-91
2314 y(mal)e(in)f(the)g(sense)i(that)e(if)g(a)h(schedule)g(that)f(meets)i
(all)e(deadlines)-91 2364 y(exists,)j(the)f(FCFS)g(algorithm)e(yields)i(such)
g(a)h(schedule.)27 b(How-)-91 2413 y(ever)n(,)15 b(even)e(when)g(such)g(a)g
(schedule)g(does)g(not)f(exist,)i(the)e(FCFS)-91 2463 y(algorithm)g(performs)
i(better)f(than)g(the)h(real-time)f(algorithms)g(in)-91 2513
y(meeting)g(soft)h(deadlines.)25 b(When)15 b(the)e(FCFS)h(scheduling)f(algo-)
-91 2563 y(rithm)6 b(is)g(used,)i(the)f(probability)t(of)g(failing)e(to)h
(transmit)g(all)h(packets)-91 2613 y(by)j(their)g(deadlines)h(is)f(equal)h
(to)f(the)h(probability)d(that)i(the)g(aggre-)-91 2662 y(gate)h(rate)h(of)f
(packets)h(produced)f(by)g(all)g(streams)i(is)e(greater)h(than)987
42 y(the)k(available)f(transmission)g(bandwidth.)31 b(For)15
b(the)h(individual)987 91 y(probability)d(density)h(function)g(\(pdf\))h(of)g
(the)g(streams)h(we)g(used)987 141 y(in)9 b(our)g(simulations,)f(the)i
(resulting)e(aggregate)i(pdf)f(approaches)h(a)987 191 y(normal)d
(distribution)t(and)h(the)f(probability)e(of)i(failure)g(is)h(very)f(sen-)987
241 y(sitive)k(to)h(the)f(link)g(utilization.)18 b(More)12
b(speci\256cally)m(,)i(in)d(practical)987 291 y(ranges,)f(the)f(probability)e
(of)i(failure)f(can)i(be)g(reduced)f(by)g(an)h(order)987 340
y(of)i(magnitude)f(by)g(lowering)g(the)h(network)f(utilization)e(by)j(a)g
(few)987 390 y(percent.)j(Moreover)n(,)9 b(because)g(the)f(Central)g(Limit)f
(Theorem)i(tells)987 440 y(us)g(that)f(the)g(aggregate)h(pdf)f(of)h
Fn(n)f Fo(independent)g(random)g(variables)987 490 y(approaches)13
b(a)g(normal)f(distribution)d(regardless)k(of)f(the)g(original)987
540 y(distribution)o(s,)c(this)h(result)g(holds)g(for)h(all)f(aggregate)h
(independent)987 589 y(VBR)g(traf)o(\256c.)1037 650 y(Minimizing)c(the)i(buf)
o(fer)g(space)h(requirement)f(is)f(important)g(for)987 699
y(three)k(reasons.)16 b(The)c(\256rst)e(is)g(simply)g(the)h(cost)f(of)g(the)h
(memory)g(in)987 749 y(the)i(switch.)23 b(Second,)15 b(the)e(maximum)h(delay)
f(through)e(a)j(switch)987 799 y(when)h(packets)h(are)h(scheduled)e
(according)g(to)g(the)h(FCFS)f(algo-)987 849 y(rithm)7 b(is)h(proportional)e
(to)i(the)g(size)h(of)f(the)g(buf)o(fer;)g(the)g(smaller)h(the)987
899 y(buf)o(fer)n(,)14 b(the)e(smaller)h(the)f(delay)m(.)22
b(Finally)m(,)13 b(jitter)e(is)h(also)h(reduced)987 948 y(when)e(smaller)h
(buf)o(fers)g(are)g(used)g(because)h(the)e(worst)g(case)i(jitter)987
998 y(is)e(the)g(dif)o(ference)g(between)g(the)g(shortest)g(delay)g(and)g
(the)f(longest)987 1048 y(delay)m(.)24 b(W)m(e)14 b(showed)f(that)f(the)h
(phases)h(of)f(the)g(message)h(streams)987 1098 y(can)e(greatly)e(af)o(fect)i
(the)f(buf)o(fer)g(space)h(requirement)f(and)g(that)g(the)987
1148 y(ef)o(fects)i(of)e(phase)h(can)h(be)f(minimized)f(by)h(evenly)f
(spreading)h(the)987 1197 y(packets)f(from)f(each)h(stream)g(over)f(the)h
(period)e(of)h(the)g(stream.)1037 1257 y(Finally)m(,)f(we)i(showed)f
(simulation)e(results)h(of)h(a)h Fp(\()p Fo(1)p Fn(;)c(k)q
Fp(\))i Fo(packet-)987 1307 y(dropping)j(algorithm)g(compared)i(with)f(the)g
(last-in-\256rst-discard)987 1357 y(\(LIFD\))f(algorithm.)20
b(W)m(e)13 b(measured)g(the)f(network)g(performance)987 1407
y(by)d(how)g(often)g(it)f(failed)h(to)g(deliver)f(at)i(least)f
Fn(k)i Fo(consecutive)e(pack-)987 1457 y(ets)j(from)g(a)g(stream.)22
b(Although)10 b(the)h Fp(\()p Fo(1)p Fn(;)c(k)q Fp(\))12 b
Fo(dropping)e(algorithm)987 1507 y(did)16 b(signi\256cantly)f(reduce)i(the)g
(failure)f(rate,)j(we)e(were)h(able)f(to)987 1556 y(reduce)e(this)e(failure)h
(rate)g(by)g(a)h(similar)e(amount)h(by)g(simply)f(re-)987 1606
y(ducing)g(the)h(admitted)f(utilization)f(of)h(the)h(message)i(streams)f(by)
987 1656 y(a)g(few)f(percent)h(and)f(using)g(the)g(LIFD)h(algorithm.)26
b(W)m(e)14 b(believe)987 1706 y(that)g(the)h(increased)h(complexity)f(of)f
(the)h Fp(\()p Fo(1)p Fn(;)7 b(k)q Fp(\))15 b Fo(algorithm)f(will)987
1756 y(reduce)d(the)g(achievable)g(transmission)e(rate)i(of)f(the)h(switches)
f(and)987 1805 y(ef)o(fectively)h(reduce)h(the)f(achievable)h(utilization)c
(of)j(the)g(network)987 1855 y(by)e(a)g(comparable)h(amount.)15
b(Our)9 b(results)f(therefore)h(indicate)g(that)987 1905 y(the)f(simple)g
(LIFD)g(algorithm)f(performs)h(just)g(as)g(well)g(as)h(the)f(more)987
1955 y(complex)i Fp(\()p Fo(1)p Fn(;)d(k)q Fp(\))j Fo(dropping)e(algorithm.)
1037 2015 y(In)k(this)f(paper)n(,)j(we)f(have)g(concentrated)g(on)f(a)h
(local)f(area)i(net-)987 2065 y(work)c(consisting)f(of)h(one)h(packet)g
(switch)f(for)g(transmitting)e(VBR)987 2115 y(soft-real-time)j(traf)o(\256c.)
20 b(For)11 b(future)g(work,)h(we)g(intend)f(to)g(extend)987
2164 y(our)e(simulation)f(results)h(to)g(a)h(multiple)f(switch)g(environment)
f(and)987 2214 y(evaluate)i(our)e(scheduling)g(algorithms,)h(traf)o(\256c)g
(shaping)g(policies,)987 2264 y(and)14 b(packet-dropping)e(algorithms.)26
b(W)m(e)15 b(also)f(plan)f(to)h(test)g(our)987 2314 y(algorithms)i(on)g(real)
h(traces)h(of)f(compressed)h(video.)34 b(Another)987 2364 y(assumption)12
b(we)i(made)f(about)g(the)g(messages)h(was)g(that)e(they)h(all)987
2413 y(had)i(equal)g(relative)g(deadlines.)30 b(While)15 b(this)f(seems)j
(likely)d(for)987 2463 y(all)c(interactive)g(traf)o(\256c,)i(for)e(example,)i
(this)d(assumption)h(may)h(not)987 2513 y(hold)16 b(if)h(playback)g(traf)o
(\256c)h(and)f(interactive)f(traf)o(\256c)i(are)g(mixed.)987
2563 y(As)10 b(pointed)f(out)g(in)g([3])g(a)i(single)e(FCFS)h(queue)g(does)g
(not)f(provide)987 2613 y(\257exibility)c(in)i(assigning)f(dif)o(ferent)h
(delays)h(or)f(quality-of-service.)987 2662 y(Separating)13
b(dif)o(ferent)h(classes)h(of)f(traf)o(\256c)g(into)f(multiple)f(queues)p
eop
%%Page: 10 10
9 bop -91 42 a Fo(may)17 b(provide)f(more)i(\257exibility)m(,)f(but)f(it)g
(may)i(also)f(reduce)g(the)-91 91 y(achievable)11 b(statistical)e
(multiplexing)e(gain.)-91 204 y Fr(Refer)o(ences)-66 305 y
Fb([1])22 b(D.)14 b(D.)h(Clark,)h(S.)e(Shenker)o(,)g(and)f(L.)i(Zhang.)25
b(Supporting)14 b(real-)-1 350 y(time)e(applications)e(in)i(an)g(integrated)f
(services)f(packet)g(network:)-1 396 y(Architecture)c(and)g(mechanism.)i
Fa(Pr)o(oceedings)s(of)f(ACM)g(Sigcomm)-1 442 y('92)p Fb(,)i(pages)f
(14\26126,)g(1992.)-66 484 y([2])22 b(A.)12 b(Demers,)g(S.)h(Keshav)n(,)d
(and)h(S.)h(Shenker)n(.)20 b(Analysis)11 b(and)g(sim-)-1 529
y(ulation)h(of)g(a)g(fair)h(queueing)d(algorithm.)22 b Fa(Pr)o(oceeding)o(s)9
b(of)j(ACM)-1 575 y(Sigcomm)c('89)p Fb(,)h(pages)f(1\26112,)g(1989.)-66
617 y([3])22 b(D.)15 b(Ferrari.)29 b(Real-time)15 b(communication)f(in)h(an)f
(internetwork.)-1 663 y Fa(Journal)7 b(of)j(High)f(Speed)e(Networks)h(1)p
Fb(,)h(pages)f(79\261103,)f(1992.)-66 705 y([4])22 b(D.)13
b(Ferrari)g(and)f(D.)h(V)l(erma.)23 b(A)13 b(scheme)e(for)i(real-time)h
(channel)-1 751 y(establishment)9 b(in)i(wide-area)g(networks.)17
b Fa(IEEE)11 b(Journal)e(on)h(Se-)-1 796 y(lected)e(Ar)o(eas)f(in)j
(Communications)p Fb(,)e(8:368\261379,)f(April)j(1990.)-66
838 y([5])22 b(S.)14 b(Golestani.)27 b(A)15 b(framing)f(strategy)g(for)h
(congestion)e(manage-)-1 884 y(ment.)i Fa(IEEE)9 b(Journal)f(on)i(Selected)e
(Ar)o(eas)g(in)i(Communications)p Fb(,)-1 930 y(9\(7\):1064\2611077,)d(Sept.)
i(1991.)-66 972 y([6])22 b(R.)7 b(M.)h(Grow)n(.)i(A)e(timed-token)f(protocol)
f(for)i(local)f(area)g(networks.)-1 1017 y Fa(Electr)o(o)e(82,)j(T)m(oken)d
(Access)t(Pr)o(otocols)p Fb(,)h(\(Paper)h(17/3\),)h(May)e(1982.)-66
1059 y([7])22 b(M.)17 b(Hamdaoui)e(and)h(P)l(.)h(Ramanathan.)31
b(A)17 b(service)e(policy)i(for)-1 1105 y(real-time)12 b(customers)e(with)h
(\(m,k\)-\256rm)i(deadline.)18 b Fa(Pr)o(oceedings)-1 1151
y(of)10 b(Fault)g(T)m(olerant)f(Computing)g(Systems)p Fb(,)g(pages)f
(196\261205,)h(June)-1 1196 y(1994.)-66 1238 y([8])22 b(C.)15
b(R.)h(Kalmanek,)g(H.)f(Kanakia,)h(and)e(S.)i(Keshav)n(.)27
b(Rate)15 b(con-)-1 1284 y(trolled)k(servers)e(for)i(very)f(high)f(speed)g
(networks.)37 b Fa(Pr)o(oceed-)-1 1330 y(ings)14 b(IEEE)h(Global)g(T)m
(elecommunications)c(Confer)o(ence)p Fb(,)j(pages)-1 1375 y
(300.3.1\261300.3.9,)7 b(Dec.)i(1990.)-66 1417 y([9])22 b(C.)13
b(L.)g(Liu)f(and)g(J.)h(Layland.)21 b(Scheduling)11 b(algorithms)h(for)i
(mul-)-1 1463 y(tiprogramming)c(in)h(a)e(hard-real-time)i(environment.)16
b Fa(Journal)8 b(of)-1 1509 y(the)h(ACM)p Fb(,)g(20\(1\):46\26161,)g(Jan.)f
(1973.)-84 1551 y([10])21 b(A.)9 b(Parekh)f(and)g(R.)i(Gallager)n(.)j(A)c
(generalized)f(processor)f(sharing)-1 1596 y(approach)e(to)j(\257ow)e
(control)i(in)f(integrated)g(services)f(networks:)12 b(the)-1
1642 y(multiple)d(node)d(case.)11 b Fa(Pr)o(oceedings)t(of)e(IEEE)f
(Infocom'93)p Fb(,)g(pages)-1 1688 y(521\261530,)f(March)i(1993.)-83
1730 y([1)o(1])21 b(I.)11 b(R.)g(Philp)f(and)g(J.)g(W)m(.)h(S.)f(Liu.)17
b(End-to-end)10 b(scheduling)e(in)j(real-)-1 1775 y(time)g(packet)f(switched)
f(networks.)17 b Fa(T)m(o)10 b(appear)f(in)i(International)-1
1821 y(Confer)o(ence)6 b(on)j(Network)f(Pr)o(otocols)p Fb(,)f(Oct.)j(1996.)
-84 1863 y([12])21 b(H.)8 b(Saran,)g(S.)g(Keshav)n(,)e(and)h(C.)i(R.)f
(Kalmanek.)i(A)e(scheduling)e(dis-)-1 1909 y(cipline)g(and)f(admission)g
(control)h(policy)g(for)h(Xunet)f(2.)i Fa(Multimedia)-1 1954
y(Systems)p Fb(,)g(2:1)o(18\261128,)f(1994.)-84 1996 y([13])21
b(K.)8 b(C.)g(Sevcik)f(and)g(M.)h(J.)g(Johnson.)h(Cycle)e(time)h(properties)f
(of)i(the)-1 2042 y(FDDI)i(token)g(ring)g(protocol.)19 b Fa(IEEE)11
b(T)n(ransactions)e(on)i(Softwar)o(e)-1 2088 y(Engineering)p
Fb(,)c(SE-13\(3\),)j(March)f(1987.)-84 2130 y([14])21 b(K.)16
b(S.)f(T)o(rivedi.)30 b Fa(Pr)o(obability)14 b(and)h(Statistics)g(with)h
(Reliability)n(,)-1 2175 y(Queuing,)6 b(and)h(Computer)e(Science)h
(Applications)p Fb(.)j(Prentice-Hall)-1 2221 y(Inc.,)g(Erewhon,)g(NC,)h
(1982.)-84 2263 y([15])21 b(D.)10 b(C.)h(V)l(erma,)f(H.)h(Zhang,)e(and)g(D.)i
(Ferrari.)17 b(Delay)9 b(jitter)j(control)-1 2309 y(for)d(real-time)h
(communication)e(in)h(a)g(packet)e(switching)h(network.)-1
2354 y Fa(Pr)o(oceedings)d(of)10 b(T)n(ricomm)e('91)p Fb(,)i(April)g(1991.)
-84 2396 y([16])21 b(H.)c(Zhang)f(and)g(D.)i(Ferrari.)35 b(Rate)17
b(controlled)g(static-priority)-1 2442 y(queueing.)24 b Fa(Pr)o(oceedings)10
b(of)15 b(IEEE)e(Infocom)h('93)p Fb(,)h(pages)d(227\261)-1
2488 y(236,)c(March)h(1993.)-84 2530 y([17])21 b(L.)13 b(Zhang.)23
b(V)n(irtual)14 b(Clock:)21 b(A)13 b(new)g(traf)o(\256c)h(control)f
(algorithm)-1 2575 y(for)8 b(packet)f(switching)g(networks.)k
Fa(Pr)o(oceeding)o(s)5 b(ACM)j(Sigcomm)p Fb(,)-1 2621 y(pages)f(19\26129,)h
(1990.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
