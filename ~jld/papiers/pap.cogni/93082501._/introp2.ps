%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - INTROP2.DOC
%%BoundingBox: 18 23 577 819
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar 16#A7/section
16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5
/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2
/Acircumflex 16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7
/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis
16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth
16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde
16#D6/Odieresis 16#D7/multiply 16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute
16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE/Thorn 16#DF/germandbls
16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3/atilde 16#E4/adieresis
16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA
/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE/icircumflex
16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4
/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash
16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute
16#FE/thorn 16#FF/ydieresis ] def/reencdict 12 dict def/IsChar{basefontdict
/CharStrings get exch known}bd/MapCh{dup IsChar not{pop/bullet}if
newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0/degree IsChar{
/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar IsChar{/brokenbar}{
/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname ed/basefontname
ed FontDirectory newfontname known not{/basefontdict basefontname findfont
def/newfont basefontdict maxlength dict def basefontdict{exch dup/FID
ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll put}{exch
newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont/FontName
newfontname put 127 1 159{newfont/Encoding get exch/bullet put}for
ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree MapBB
newfontname newfont definefont pop}if newfontname end}bd/SB{FC/ULlen
ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed/dxGdi ed
/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1 mul x1 x1
mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch y1 mul
cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra ed
/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - INTROP2.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {a4
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
/setresolution where { pop 300 300 setresolution } if
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 31 776 1169 300 SM
32 0 0 92 92 0 0 0 84 /Times-Bold /font29 ANSIFont font
0 0 0 fC
279 698 1020 (Introduction \340 la partie II) 1020 SB
32 0 0 67 67 0 0 0 61 /Times-Bold /font29 ANSIFont font
279 902 768 (Apprendre pour converser) 768 SB
32 0 0 63 63 0 0 0 56 /Times-Italic /font31 ANSIFont font
721 1078 1389 (L'apprentissage des connaissances conversationnelles) 1389 SB
1225 1149 885 (r\351v\350le une sp\351cialisation cognitive) 885 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
279 1370 1001 (Notre objectif, que nous r\351aliserons dans la partie III,) 1001 SB
220 1423 967 (est d'utiliser une interaction de type conversationnel) 967 SB
220 1476 1032 (pour enseigner des connaissances \340 des \351tudiants. Mais) 1032 SB
220 1529 943 (quel type de connaissances peut-on enseigner ainsi) 943 SB
1163 1529 35 ( ?) 35 SB
220 1582 1040 (Pour y r\351pondre, nous devons savoir quel est le type des) 1040 SB
220 1635 959 (connaissances qui sont manipul\351es dans les conver-) 959 SB
220 1688 1014 (sations, et comment les interlocuteurs les ont acquises.) 1014 SB
279 1791 908 (Une r\351ponse qui vient \340 l'esprit concernant  cette) 908 SB
220 1844 974 (derni\350re question consiste \340 penser que les individus) 974 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
220 1897 170 (extraient ) 170 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
390 1897 871 (ces connaissances directement, \340 partir de leur) 871 SB
220 1950 961 (exp\351rience de nombreuses situations semblables. Ils) 961 SB
220 2003 1001 (parviendraient ainsi \340 juger de l'incoh\351rence d'une si-) 1001 SB
220 2056 1023 (tuation, comme ils le font couramment dans les conver-) 1023 SB
220 2109 962 (sations, en la comparant \340 l'ensemble des situations) 962 SB
220 2162 1061 (normales qu'ils ont v\351cues dans les m\352mes circonstances.) 1061 SB
220 2215 1050 (Mais nous montrons qu'un tel m\351canisme d'extraction ne) 1050 SB
220 2268 984 (peut pas expliquer la performance conversationnelle.) 984 SB
279 2371 726 (Nous proposons une solution diff\351rente) 726 SB
1005 2371 199 ( : l'incoh\351-) 199 SB
220 2424 972 (rence d'une situation est manipul\351e en tant que telle,) 972 SB
220 2477 978 (comme une relation logique, par l'individu qui la vit.) 978 SB
220 2530 1061 (Dans cette fa\347on de voir, les connaissances sont acquises) 1061 SB
220 2583 1034 (par des m\351canismes symboliques \(logiques\) op\351rant sur) 1034 SB
220 2636 73 (des ) 73 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
293 2636 157 (concepts) 157 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
450 2636 12 (.) 12 SB
279 2739 914 (Dans ce cas, il reste \340 expliquer d'o\371 viennent les) 914 SB
220 2792 975 (concepts. Comment sont-ils form\351s, ou comme on dit) 975 SB
220 2845 789 (dans le cas de symboles, comment sont-ils ) 789 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
1009 2845 116 (ancr\351s) 116 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
1125 2845 96 ( ? L\340) 96 SB
220 2898 744 (encore, nous examinons une alternative.) 744 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
2064 3215 46 (85) 46 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 31 776 1169 300 SM
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
0 0 0 fC
220 105 46 (86) 46 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
1690 105 15 (I) 15 SB
32 0 0 38 38 0 0 0 35 /Times-Italic /font31 ANSIFont font
1705 112 493 (NTRODUCTION A LA PARTIE ) 493 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
2198 105 30 (II) 30 SB
255 255 255 fC
/fm 256 def
2019 11 214 158 B
1 F
n
0 0 0 fC
2019 2 214 170 B
1 F
n
279 498 891 (Une premi\350re hypoth\350se serait de consid\351rer les) 891 SB
220 551 804 (concepts comme des perceptions int\351gr\351es, ) 804 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
1024 551 154 (extraites) 154 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
1178 551 73 ( des) 73 SB
220 604 1036 (perceptions directes. Leur repr\351sentation physique dans) 1036 SB
220 657 1060 (le cerveau ressembleraient \340 celle des perceptions qui les) 1060 SB
220 710 1000 (\351voquent une fois qu'ils sont acquis. C'est ce que nous) 1000 SB
220 763 363 (appelons l'ancrage ) 363 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
583 763 208 (analogique ) 208 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
791 763 245 (des concepts.) 245 SB
220 816 875 (Malheureusement, l'invocation d'un m\351canisme) 875 SB
220 869 949 (d'extraction se heurte encore une fois \340 un obstacle) 949 SB
220 922 965 (majeur, qui r\351side cette fois dans la syst\351maticit\351 de) 965 SB
220 975 676 (certains processus conversationnels.) 676 SB
279 1078 933 (L'autre hypoth\350se consiste \340 envisager un ancrage) 933 SB
220 1131 321 (des concepts par ) 321 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
541 1131 223 (appariement) 223 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
764 1131 382 (. Elle nous conduit \340) 382 SB
220 1184 1015 (postuler l'existence d'un appareil conceptuel autonome) 1015 SB
220 1237 1052 (qui aurait une repr\351sentation mat\351rielle dans le cerveau.) 1052 SB
279 1340 921 (Cet appareil aurait donc pour principale fonction) 921 SB
220 1393 1061 (d'op\351rer des manipulations symboliques sur les concepts.) 1061 SB
220 1446 1011 (Or on reproche souvent \340 ce genre de mod\350le de n'\352tre) 1011 SB
220 1499 245 (pas plausible) 245 SB
465 1499 746 ( : le cerveau renferme des neurones, pas) 746 SB
220 1552 241 (des symboles) 241 SB
461 1552 640 ( ! Pour contrer cette critique, nous) 640 SB
220 1605 1051 (proposons un mod\350le neuronal biologiquement plausible) 1051 SB
220 1658 1002 (d'un traitement conceptuel particuli\350rement important) 1002 SB
220 1711 885 (pour expliquer la comp\351tence conversationnelle) 885 SB
1105 1711 75 ( : la) 75 SB
220 1764 448 (d\351tection d'incoh\351rence.) 448 SB

%%BeginResource: font MSTT31c5f2
/GreNewFont{10 dict dup 3 1 roll def dup begin 6 1 roll/FontType 3
def/FontMatrix exch def/FontBBox exch def/FontInfo 2 dict def FontInfo
/UnderlinePosition 3 -1 roll put FontInfo/UnderlineThickness 3 -1
roll put/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
/CharProcs 256 dict def CharProcs/.notdef{}put/Metrics 256 dict def
Metrics/.notdef 3 -1 roll put/BuildChar{/char exch def/fontdict exch
def/charname fontdict/Encoding get char get def fontdict/Metrics get
charname get aload pop setcachedevice fontdict begin Encoding char
get CharProcs exch get end exec}def end definefont pop}def/AddChar{begin
Encoding 3 1 roll put CharProcs 3 1 roll put Metrics 3 1 roll put end}def
/MSTT31c5f2 [46.0 0 0 0 0 0] 43 -84 [-46.0 -46.0 46.0 46.0] [1 46 div 0 0 1 46 div 0 0] /MSTT31c5f2 GreNewFont
%%EndResource

32 0 0 46 46 0 0 1 41 /MSTT31c5f2 font

%%BeginResource: font MSTT31c5f2
/Ga6 [44.0 0.0 4.0 0.0 40.0 33.0]
/Ga6 {
    36 33 true [1 0 0 -1 -4.0 33.0] {<00007f00000003ffe000001ffff800007ffffc0001fffffe0003f00fff00078001ff800f0000ffc0
1c00003fc03800001fe03800001fe07000000fe060000007f060000007f0c0000003f0c0000003f0
c0000003f0c0000003f0c0000003f0c0000003e0c0000003e060000003e060000007c060000007c0
3000000f803800001f001800001e000c00003c00070000f800038001e00001f00f8000007ffc0000
000fe00000>} imagemask 
  }
  166 /Ga6 MSTT31c5f2 AddChar
%%EndResource

gs 205 3318 0 0 CB
161 1868 44 (\246) 44 SB
gr
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
220 1867 235 ( Le chapitre ) 235 SB
455 1867 65 (II.1) 65 SB
520 1867 689 ( passe en revue un certain nombre de) 689 SB
220 1920 848 (mod\350les de l'apprentissage, et en propose une) 848 SB
220 1973 258 (classification.) 258 SB
32 0 0 46 46 0 0 1 41 /MSTT31c5f2 font
gs 205 3318 0 0 CB
161 2077 44 (\246) 44 SB
gr
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
220 2076 223 (Le chapitre ) 223 SB
443 2076 65 (II.2) 65 SB
508 2076 397 ( introduit la notion d') 397 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
905 2076 225 (indiff\351rence ) 225 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
1130 2076 43 (de) 43 SB
220 2129 1010 (certains m\351canismes d'apprentissage. Ces m\351canismes) 1010 SB
220 2182 657 (ne sont sensibles qu'aux propri\351t\351s ) 657 SB
32 0 0 46 46 0 0 0 42 /Times-Roman /font32 ANSIFont font
877 2182 164 (relatives ) 164 SB
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
1041 2182 183 (des objets) 183 SB
220 2235 1032 (qu'ils traitent, ils ne les comparent jamais \340 des valeurs) 1032 SB
220 2288 1040 (fixes. Nous montrons que les m\351canismes indiff\351rents ne) 1040 SB
220 2341 856 (permettent pas d'expliquer l'apprentissage des) 856 SB
220 2394 633 (connaissances conversationnelles.) 633 SB
32 0 0 46 46 0 0 1 41 /MSTT31c5f2 font
gs 205 3318 0 0 CB
161 2498 44 (\246) 44 SB
gr
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
220 2497 319 (Dans le chapitre ) 319 SB
539 2497 65 (II.3) 65 SB
604 2497 630 (, nous d\351fendons l'id\351e qu'il existe) 630 SB
220 2550 1052 (dans le cerveau un appareil sp\351cialis\351 dans le traitement) 1052 SB
220 2603 910 (des concepts. C'est gr\342ce \340 cet appareil que nous) 910 SB
220 2656 833 (pouvons converser et apprendre de nouvelles) 833 SB
220 2709 538 (connaissances conceptuelles.) 538 SB
32 0 0 46 46 0 0 1 41 /MSTT31c5f2 font
gs 205 3318 0 0 CB
161 2813 44 (\246) 44 SB
gr
32 0 0 46 46 0 0 0 42 /Times-Italic /font31 ANSIFont font
220 2812 223 (Le chapitre ) 223 SB
443 2812 65 (II.4) 65 SB
508 2812 669 ( est consacr\351 \340 l'expos\351 d'un mod\350le) 669 SB
220 2865 965 (neuronal plausible de cet appareil. Nous expliquons) 965 SB
220 2918 988 (comment les relations logiques peuvent \352tre encod\351es) 988 SB
220 2971 899 (spatialement dans des ensembles de neurones, et) 899 SB
220 3024 882 (comment l'incoh\351rence peut \352tre d\351tect\351e par la) 882 SB
220 3077 939 (synchronisation de tous les neurones de l'appareil.) 939 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font MSTT31c5f2
%%+ font Times-Italic
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 2
% TrueType font name key:
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT31c1bd = 2a5fDTimes New RomanF0000005c000002bc0000
%    MSTT31c597 = 2a5fDTimes New RomanF00000043000002bc0000
%    MSTT31c5a4 = 2a5fDTimes New RomanF0000002e000001900000
%    MSTT31c5b1 = 2a5fDTimes New RomanF0000002e000001900001
%    MSTT31c5be = 2a5fDTimes New RomanF00000032000001900000
%    MSTT31c5cb = 2a5fDTimes New RomanF00000026000001900001
%    MSTT31c5d8 = 2a5fDTimes New RomanF00000026000001900000
%    MSTT31c5e5 = 2a5fDTimes New RomanF0000003f000001900001
%    MSTT31c5f2 = 2a5fDWingdingsF0000002e000001900000
%    MSTT31c5fe = 2a5fDTimes New RomanF0000001f000001900000
%    MSTT31c60b = 2a5fDMinstrelF00000019000001900001
%    MSTT31c616 = 2a5fDTimes New RomanF00000012000001900001
%    MSTT31c623 = 2a5fDTimes New RomanF0000002a000001900000
%    MSTT31c630 = 2a5fDTimes New RomanF00000021000001900000
%    MSTT31c63d = 2a5fDTimes New RomanF0000002a000001900001
%    MSTT31c64a = 2a5fDTimes New RomanF00000032000001900001
%    MSTT31c657 = 2a5fDTimes New RomanF0000002e000002bc0000
%    MSTT31c664 = 2a5fDTimes New RomanF00000026000002bc0000
%    MSTT31c671 = 2a5fDTimes New RomanF0000002e000002bc0001
%    MSTT31c67e = 2a5fDTimes New RomanF0000003a000002bc0001
%    MSTT31c68b = 2a5fDTimes New RomanF0000002a000002bc0001
%    MSTT31c698 = 2a5fDTimes New RomanF0000003a000001900000
%    MSTT31c6a5 = 2a5fDTimes New RomanF00000036000002bc0000
%    MSTT31c6b2 = 2a5fDKroneF00000032000002bc0001
%    MSTT31c6bd = 2a5fDTimes New RomanF00000032000002bc0000
%    MSTT31c6ca = 2a5fDTimes New RomanF00000021000001900001
%    MSTT31c6d7 = 2a5fDTimes New RomanF00000010000001900000
%    MSTT31c6e4 = 2a5fDTimes New RomanF0000000c000002bc0000
%    MSTT31c6f1 = 2a5fDTimes New RomanF00000000000001900000
%    MSTT31c6fe = 2a5fDTimes New RomanF0000001d000001900000
%    MSTT31c70b = 2a5fDTimes New RomanF00000006000001900000
%    MSTT31c718 = 2a5fDTimes New RomanF0000001d000001900001
%    MSTT31c725 = 2a5fDTimes New RomanF00000015000001900000
%    MSTT31c732 = 2a5fDTimes New RomanF00000015000001900001
%    MSTT31c73f = 2a5fDTimes New RomanF0000002d000002bc0000
%    MSTT31c74c = 2a5fDTimes New RomanF00000016000001900000
%    MSTT31c759 = 2a5fDTimes New RomanF0000000e000001900000
%    MSTT31c766 = 2a5fDTimes New RomanF0000000a000001900000
%    MSTT31c773 = 2a5fDTimes New RomanF0000002a000002bc0000
%    MSTT31c780 = 2a5fDTimes New RomanF0000000d000002bc0000
%    MSTT31c78d = 2a5fDArialF00000032000001900000
%    MSTT31c798 = 2a5fDArialF0000002a000001900001
%    MSTT31c7a3 = 2a5fDTimes New RomanF0000004b000002bc0000
%    MSTT31c7b0 = 2a5fDWingdingsF0000003a000001900000
%    MSTT31c7bc = 2a5fDCourier NewF0000002e000001900000
%    MSTT31c7c8 = 2a5fDWingdingsF00000032000001900000
%    MSTT31c7d4 = 2a5fDTimes New RomanF00000032000002bc0001
%    MSTT31c7e1 = 2a5fDTimes New RomanF0000003a000001900001
%%DocumentSuppliedResources: procset Win35Dict 3 1
%%+ font MSTT31c5f2

%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
