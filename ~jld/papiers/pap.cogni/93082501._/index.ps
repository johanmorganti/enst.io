%!PS-Adobe-3.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - INDEX.DOC
%%BoundingBox: 18 23 577 819
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar 16#A7/section
16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5
/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2
/Acircumflex 16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7
/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis
16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth
16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde
16#D6/Odieresis 16#D7/multiply 16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute
16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE/Thorn 16#DF/germandbls
16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3/atilde 16#E4/adieresis
16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA
/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE/icircumflex
16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4
/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash
16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute
16#FE/thorn 16#FF/ydieresis ] def/reencdict 12 dict def/IsChar{basefontdict
/CharStrings get exch known}bd/MapCh{dup IsChar not{pop/bullet}if
newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0/degree IsChar{
/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar IsChar{/brokenbar}{
/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname ed/basefontname
ed FontDirectory newfontname known not{/basefontdict basefontname findfont
def/newfont basefontdict maxlength dict def basefontdict{exch dup/FID
ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll put}{exch
newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont/FontName
newfontname put 127 1 159{newfont/Encoding get exch/bullet put}for
ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree MapBB
newfontname newfont definefont pop}if newfontname end}bd/SB{FC/ULlen
ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed/dxGdi ed
/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1 mul x1 x1
mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch y1 mul
cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra ed
/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
statusdict begin 0 setjobtimeout end
statusdict begin statusdict /jobname (Microsoft Word - INDEX.DOC) put end
/oldDictCnt countdictstack def {}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
/oldDictCnt countdictstack def {a4
}stopped 
{ countdictstack oldDictCnt lt { Win35Dict begin } 
{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 
[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind
/exec load currenttransfer /exec load] cvx settransfer
/setresolution where { pop 300 300 setresolution } if
%%EndSetup
%%Page: 1 1
%%PageResources: (atend)
SS
0 0 25 31 776 1169 300 SM
32 0 0 92 92 0 0 0 89 /Times-Bold /font29 ANSIFont font
0 0 0 fC
220 371 225 (Index) 225 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
1298 627 320 (co-r\351actions, 43) 320 SB
220 685 209 (accord, 44) 209 SB
1416 685 373 (co-\351tonnement, 43) 373 SB
220 743 538 (algorithmes g\351n\351tiques, 89) 538 SB
1416 743 376 (co-lamentation, 43) 376 SB
220 801 522 (ancrage des concepts, 148) 522 SB
1416 801 386 (co-r\351jouissance, 43) 386 SB
220 859 511 (antagoniste \(r\351action\), 40) 511 SB
1298 859 459 (compositionnalit\351, 177) 459 SB
220 917 491 (appareil conceptuel, 147) 491 SB
1298 917 174 (concepts) 174 SB
220 975 629 (appariement, 97; 156; 160; 173) 629 SB
1416 975 320 (abstraction, 141) 320 SB
220 1033 271 (apprentissage) 271 SB
1416 1033 256 (ancrage, 148) 256 SB
338 1091 323 (appariement, 97) 323 SB
1416 1091 593 (appareil conceptuel, 147; 171) 593 SB
338 1149 315 (compilation, 94) 315 SB
1416 1149 406 (compr\351hension, 200) 406 SB
338 1207 556 (concepts et proc\351dures, 191) 556 SB
1416 1207 578 (concepts et incoh\351rence, 138) 578 SB
338 1265 353 (convergence, 119) 353 SB
1416 1265 296 (d\351finition, 139) 296 SB
338 1323 285 (difficult\351, 111) 285 SB
1416 1323 480 (encodage implicite, 155) 480 SB
338 1381 389 (empirisme, 87; 142) 389 SB
1416 1381 733 (formation par extraction analogique,) 733 SB
1889 1439 75 (153) 75 SB
338 1439 301 (extraction, 101) 301 SB
338 1497 290 (harmonie, 116) 290 SB
1416 1497 539 (int\351gration perceptive, 143) 539 SB
338 1555 257 (imitation, 97) 257 SB
1416 1555 284 (intension, 140) 284 SB
338 1613 313 (indiff\351rent, 116) 313 SB
1416 1613 797 (les concepts comme des d\351tecteurs, 149) 797 SB
338 1671 256 (inn\351isme, 95) 256 SB
1416 1671 376 (m\351morisation, 201) 376 SB
338 1729 293 (maturation, 96) 293 SB
1416 1729 477 (n\351gation, 144; 150; 177) 477 SB
338 1787 326 (optimisation, 88) 326 SB
1416 1787 328 (s\351mantique, 150) 328 SB
338 1845 353 (par extraction, 89) 353 SB
1416 1845 358 (vs proc\351dure, 191) 358 SB
338 1903 482 (par la conversation, 199) 482 SB
1298 1903 281 (connaissances) 281 SB
338 1961 455 (relations logiques, 122) 455 SB
1416 1961 296 (d\351finition, 139) 296 SB
338 2019 259 (stabilit\351, 118) 259 SB
1416 2019 697 (conceptuelles vs proc\351durales, 190) 697 SB
338 2077 462 (th\351orie des fusibles, 98) 462 SB
1298 2077 607 (connexionnisme, 92; 108; 167) 607 SB
220 2135 208 (arguments) 208 SB
1298 2135 249 (constituence) 249 SB
1547 2135 114 ( , 175) 114 SB
338 2193 225 (analyse, 75) 225 SB
1298 2193 519 (constructivisme, 100; 120) 519 SB
338 2251 195 (calcul, 70) 195 SB
1298 2251 408 (contexte logique, 19) 408 SB
338 2309 247 (synth\350se, 75) 247 SB
1298 2309 219 (contraintes) 219 SB
220 2367 176 (atol, 222) 176 SB
1416 2367 408 (cognitives, 238; 245) 408 SB
1416 2425 769 (conversationnelles, 13; 14; 27; 30; 52;) 769 SB
1889 2483 75 (245) 75 SB
220 2483 317 (banalisation, 34) 317 SB
338 2541 606 (dans le mode \(in\)d\351sirable, 39) 606 SB
1298 2541 331 (conversation, 13) 331 SB
338 2599 581 (dans le mode improbable, 34) 581 SB
1298 2599 466 (coop\351ration, 34; 42; 59) 466 SB
220 2657 455 (Behaviorisme, 90; 186) 455 SB
1298 2657 217 (corr\351lation) 217 SB
220 2715 840 (bid\351termination, 151; 153; 158; 160; 162;) 840 SB
811 2773 177 (163; 164) 177 SB
1416 2715 485 (seuil de corr\351lation, 101) 485 SB
1298 2773 288 (couche C, 171) 288 SB
1298 2831 356 (critique, 227; 235) 356 SB
220 2889 453 (cassure, 14; 19; 20; 27) 453 SB
220 2947 560 (clarification de contexte, 45) 560 SB
1298 2947 183 (d\351tecteur) 183 SB
220 3005 638 (clause de r\351f\351rence, 30; 73; 207) 638 SB
1416 3005 265 (collectif, 169) 265 SB
220 3063 459 (clause n\351gative, 22; 70) 459 SB
1416 3063 255 (primitif, 174) 255 SB
220 3121 354 (clause satur\351e, 30) 354 SB
2153 3212 75 (271) 75 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Bold
%%+ font Times-Roman
%%Page: 2 2
%%PageResources: (atend)
SS
0 0 25 31 776 1169 300 SM
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
0 0 0 fC
102 145 75 (272) 75 SB
32 0 0 50 50 0 0 0 47 /Times-Italic /font31 ANSIFont font
1962 143 148 (INDEX) 148 SB
255 255 255 fC
/fm 256 def
2019 11 96 202 B
1 F
n
0 0 0 fC
2019 2 96 214 B
1 F
n
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
220 323 298 (m\351moris\351, 174) 298 SB
1180 323 477 (n\351gation, 144; 150; 177) 477 SB
102 381 463 (d\351tection, 97; 149; 168) 463 SB
220 439 356 (de proximit\351, 153) 356 SB
1180 439 242 (paradise, 72) 242 SB
220 497 542 (des incoh\351rences, 171; 257) 542 SB
1180 497 438 (pertinence, 15; 35; 65) 438 SB
1298 555 489 (espace de pertinence, 28) 489 SB
102 613 273 (EBL, 76; 162) 273 SB
1298 613 226 (logique, 64) 226 SB
102 671 276 (empreinte, 97) 276 SB
1298 671 444 (maxime gric\351enne, 60) 444 SB
1298 729 251 (optimale, 61) 251 SB
102 787 381 (\351pist\351mologie, 252) 381 SB
1180 787 678 (pertinence logique, 27; 40; 45; 52) 678 SB
1180 845 430 (Piaget, 100; 120; 179) 430 SB
102 903 604 (explication, 33; 144; 162; 225) 604 SB
1180 903 659 (pragmatique, 13; 19; 33; 57; 249) 659 SB
102 961 351 (explicitation, 230) 351 SB
1298 961 428 (conversationnelle, 64) 428 SB
102 1019 505 (extraction, 101; 143; 152) 505 SB
1180 1019 877 (probl\351matique, 14; 27; 29; 45; 63; 165; 200) 877 SB
1180 1077 320 (proc\351dures, 191) 320 SB
102 1135 155 (fusibles) 155 SB
220 1193 564 (th\351orie des fusibles, 98; 122) 564 SB
1180 1193 477 (r\351action antagoniste, 40) 477 SB
1180 1251 331 (redondance, 222) 331 SB
102 1309 501 (g\351n\351ration de textes, 250) 501 SB
1180 1309 279 (relativit\351, 107) 279 SB
102 1367 336 (Gestaltisme, 122) 336 SB
1180 1367 308 (robustesse, 113) 308 SB
102 1425 735 (grammaire conversationnelle, 47; 48) 735 SB
102 1483 341 (Grice, 15; 42; 59) 341 SB
1180 1483 355 (savant1, 188; 217) 355 SB
1180 1541 355 (savant2, 189; 217) 355 SB
102 1599 392 (harmonie, 114; 123) 392 SB
1180 1599 457 (savant3, 194; 203; 235) 457 SB
102 1657 312 (Hofstadter, 141) 312 SB
1180 1657 193 (SBL, 159) 193 SB
1180 1715 592 (Sperber et Wilson, 13; 20; 61) 592 SB
102 1773 257 (imitation, 97) 257 SB
1180 1773 435 (sph\350re \351gocentr\351e, 35) 435 SB
102 1831 279 (implicite, 155) 279 SB
1180 1831 562 (styles conversationnels, 249) 562 SB
102 1889 546 (incoh\351rence, 138; 171; 257) 546 SB
1180 1889 289 (suggestion, 38) 289 SB
102 1947 649 (indiff\351rence, 102; 143; 153; 157) 649 SB
1180 1947 547 (sujet de la conversation, 30) 547 SB
220 2005 296 (d\351finition, 107) 296 SB
1180 2005 331 (supervision, 101) 331 SB
102 2063 692 (Information Conversationnelle, 26) 692 SB
1180 2063 273 (sym\351trie, 102) 273 SB
102 2121 284 (intension, 140) 284 SB
1180 2121 627 (synchronisation neuronale, 169) 627 SB
102 2179 239 (invalidation) 239 SB
1180 2179 667 (syst\351maticit\351, 145; 146; 167; 174) 667 SB
220 2237 606 (dans le mode \(in\)d\351sirable, 38) 606 SB
220 2295 581 (dans le mode improbable, 33) 581 SB
1180 2295 382 (tournoi narratif, 37) 382 SB
220 2353 550 (dans le mode paradoxal, 31) 550 SB
1180 2353 610 (troubles conversationnels, 248) 610 SB
220 2411 212 (directe, 31) 212 SB
220 2469 298 (explication, 33) 298 SB
1180 2469 450 (unicit\351 mat\351rielle, 145) 450 SB
220 2527 430 (indirecte, 32; 57; 229) 430 SB
102 2585 276 (isotropie, 107) 276 SB
1180 2585 289 (why, 193; 194) 289 SB
102 2701 591 (logique conversationnelle, 21) 591 SB
102 2817 111 (mode) 111 SB
220 2875 329 (\(in\)d\351sirable, 25) 329 SB
220 2933 304 (improbable, 23) 304 SB
220 2991 273 (paradoxal, 24) 273 SB
102 3049 243 (moteur, 213) 243 SB
1 #C
statusdict begin /manualfeed false store end
EJ RS
%%PageTrailer
%%PageResources: font Times-Italic
%%+ font Times-Roman
%%Trailer
SVDoc restore
end
%%Pages: 2
% TrueType font name key:
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT31c1bd = 2a5fDTimes New RomanF0000005c000002bc0000
%    MSTT31c597 = 2a5fDTimes New RomanF00000043000002bc0000
%    MSTT31c5a4 = 2a5fDTimes New RomanF0000002e000001900000
%    MSTT31c5b1 = 2a5fDTimes New RomanF0000002e000001900001
%    MSTT31c5be = 2a5fDTimes New RomanF00000032000001900000
%    MSTT31c5cb = 2a5fDTimes New RomanF00000026000001900001
%    MSTT31c5d8 = 2a5fDTimes New RomanF00000026000001900000
%    MSTT31c5e5 = 2a5fDTimes New RomanF0000003f000001900001
%    MSTT31c5f2 = 2a5fDWingdingsF0000002e000001900000
%    MSTT31c5fe = 2a5fDTimes New RomanF0000001f000001900000
%    MSTT31c60b = 2a5fDMinstrelF00000019000001900001
%    MSTT31c616 = 2a5fDTimes New RomanF00000012000001900001
%    MSTT31c623 = 2a5fDTimes New RomanF0000002a000001900000
%    MSTT31c630 = 2a5fDTimes New RomanF00000021000001900000
%    MSTT31c63d = 2a5fDTimes New RomanF0000002a000001900001
%    MSTT31c64a = 2a5fDTimes New RomanF00000032000001900001
%    MSTT31c657 = 2a5fDTimes New RomanF0000002e000002bc0000
%    MSTT31c664 = 2a5fDTimes New RomanF00000026000002bc0000
%    MSTT31c671 = 2a5fDTimes New RomanF0000002e000002bc0001
%    MSTT31c67e = 2a5fDTimes New RomanF0000003a000002bc0001
%    MSTT31c68b = 2a5fDTimes New RomanF0000002a000002bc0001
%    MSTT31c698 = 2a5fDTimes New RomanF0000003a000001900000
%    MSTT31c6a5 = 2a5fDTimes New RomanF00000036000002bc0000
%    MSTT31c6b2 = 2a5fDKroneF00000032000002bc0001
%    MSTT31c6bd = 2a5fDTimes New RomanF00000032000002bc0000
%    MSTT31c6ca = 2a5fDTimes New RomanF00000021000001900001
%    MSTT31c6d7 = 2a5fDTimes New RomanF00000010000001900000
%    MSTT31c6e4 = 2a5fDTimes New RomanF0000000c000002bc0000
%    MSTT31c6f1 = 2a5fDTimes New RomanF00000000000001900000
%    MSTT31c6fe = 2a5fDTimes New RomanF0000001d000001900000
%    MSTT31c70b = 2a5fDTimes New RomanF00000006000001900000
%    MSTT31c718 = 2a5fDTimes New RomanF0000001d000001900001
%    MSTT31c725 = 2a5fDTimes New RomanF00000015000001900000
%    MSTT31c732 = 2a5fDTimes New RomanF00000015000001900001
%    MSTT31c73f = 2a5fDTimes New RomanF0000002d000002bc0000
%    MSTT31c74c = 2a5fDTimes New RomanF00000016000001900000
%    MSTT31c759 = 2a5fDTimes New RomanF0000000e000001900000
%    MSTT31c766 = 2a5fDTimes New RomanF0000000a000001900000
%    MSTT31c773 = 2a5fDTimes New RomanF0000002a000002bc0000
%    MSTT31c780 = 2a5fDTimes New RomanF0000000d000002bc0000
%    MSTT31c78d = 2a5fDArialF00000032000001900000
%    MSTT31c798 = 2a5fDArialF0000002a000001900001
%    MSTT31c7a3 = 2a5fDTimes New RomanF0000004b000002bc0000
%    MSTT31c7b0 = 2a5fDWingdingsF0000003a000001900000
%    MSTT31c7bc = 2a5fDCourier NewF0000002e000001900000
%    MSTT31c7c8 = 2a5fDWingdingsF00000032000001900000
%    MSTT31c7d4 = 2a5fDTimes New RomanF00000032000002bc0001
%    MSTT31c7e1 = 2a5fDTimes New RomanF0000003a000001900001
%    MSTT31c7ee = 2a5fDTimes New RomanF00000019000001900000
%    MSTT31c7fb = 2a5fDTimes New RomanF00000043000001900000
%    MSTT31c808 = 2a5fDTimes New RomanF00000043000001900001
%    MSTT31c815 = 2a5fDTimes New RomanF00000043000002bc0001
%    MSTT31c822 = 2a5fDFencesF00000064000001900000
%    MSTT31c82d = 2a5fDMT ExtraF00000032000001900000
%    MSTT31c838 = 2a5fDTimes New RomanF00000025000002bc0000
%    MSTT31c845 = 2a5fDArialF00000017000002bc0000
%    MSTT31c850 = 2a5fDArialF00000023000002bc0000
%    MSTT31c85b = 2a5fDTimes New RomanF00000007000001900000
%    MSTT31c868 = 2a5fDArialF0000001d0000019000ff
%    MSTT31c876 = 2a5fDTimes New RomanF00000009000001900000
%    MSTT31c883 = 2a5fDBrushed ScriptF0000003a000001900000
%    MSTT31c890 = 2a5fDArialF0000002a000002bc0000
%    MSTT31c89b = 2a5fDArialF0000002a000001900000
%    MSTT31c8a6 = 2a5fDMarquee EngravedF0000002e000001900000
%    MSTT31c8b3 = 2a5fDTimes New RomanF00000021000002bc0001
%    MSTT31c8c0 = 2a5fDArialF00000021000001900001
%    MSTT31c8cb = 2a5fDBrushed ScriptF0000003a000001900001
%    MSTT31c8d8 = 2a5fDBrushed ScriptF00000032000001900001
%    MSTT31c8e5 = 2a5fDBrushed ScriptF00000032000001900000
%    MSTT31c8f2 = 2a5fDWingdingsF0000002a000001900000
%    MSTT31c8fe = 2a5fDBrushed ScriptF0000002e000001900000
%    MSTT31c90e = 2a5fDBrushed ScriptF0000002e000001900001
%    MSTT31c91b = 2a5fDBrushed ScriptF0000003a000002bc0000
%    MSTT31c928 = 2a5fDKroneF00000021000002bc0001
%    MSTT31c933 = 2a5fDKroneF0000002a000002bc0001
%    MSTT31c93e = 2a5fDTimes New RomanF00000019000001900001
%    MSTT31c94b = 2a5fDCourier NewF00000021000001900001
%    MSTT31c957 = 2a5fDCourier NewF0000002a000001900001
%    MSTT31c963 = 2a5fDTimes New RomanF00000014000001900000
%    MSTT31c970 = 2a5fDTimes New RomanF0000000c000001900000
%    MSTT31c97d = 2a5fDFencesF00000000000001900000
%    MSTT31c988 = 2a5fDTimes New RomanF00000018000001900000
%    MSTT31c995 = 2a5fDCourier NewF0000002a000001900000
%    MSTT31c9a1 = 2a5fDCourier NewF00000021000001900000
%    MSTT31c9ad = 2a5fDCourier NewF00000019000001900000
%    MSTT31c9b9 = 2a5fDTimes New RomanF0000004b000001900000
%    MSTT31c9c6 = 2a5fDTimes New RomanF00000026000002bc0001
%    MSTT31c9d3 = 2a5fDMT ExtraF00000021000001900000
%    MSTT31c9de = 2a5fDArialF00000021000001900000
%    MSTT31c9e9 = 2a5fDBrushed ScriptF0000002a000001900001
%    MSTT31c9f6 = 2a5fDArialF0000002a000002bc0001
%    MSTT31ca01 = 2a5fDGarnetF00000021000001900001
%    MSTT31ca0c = 2a5fDGarnetF00000021000001900000
%    MSTT31ca17 = 2a5fDBrushed ScriptF0000002f000001900000
%    MSTT31ca24 = 2a5fDGarnetF0000001b000001900000
%    MSTT31ca2f = 2a5fDArialF0000005c000002bc0000
%    MSTT31ca3e = 2a5fDArialF0000000c000002bc0000
%    MSTT31ca49 = 2a5fDArialF00000005000001900000
%    MSTT31ca54 = 2a5fDFuturistF00000032000001900000
%    MSTT31ca5f = 2a5fDMinstrelF0000002e000001900001
%    MSTT31ca6a = 2a5fDMinstrelF00000032000001900001
%    MSTT31ca75 = 2a5fDMinstrelF0000003a000002bc0000
%    MSTT31ca80 = 2a5fDMinstrelF00000032000002bc0001
%    MSTT31ca8b = 2a5fDMinstrelF0000002a000001900001
%    MSTT31ca96 = 2a5fDMinstrelF00000026000001900001
%    MSTT31caa1 = 2a5fDMinstrelF00000032000001900000
%    MSTT31caac = 2a5fDTimes New RomanF0000000d000001900000
%    MSTT31cab9 = 2a5fDTimes New RomanF00000028000001900001
%    MSTT31cac6 = 2a5fDTimes New RomanF0000000b000001900000
%    MSTT31cad6 = 2a5fDOptane ExtraboldF0000002e000001900001
%    MSTT31cae3 = 2a5fDTimes New RomanF0000003a000002bc0000
%    MSTT31caf0 = 2a5fDWingdingsF0000002a000001900001
%    MSTT31cafc = 2a5fDFuturistF00000032000002bc0000
%    MSTT31cb07 = 2a5fDFuturistF0000002d000002bc0000
%    MSTT31cb12 = 2a5fDFuturistF0000002d000001900000
%    MSTT31cb1d = 2a5fDCricketF00000025000001900001
%    MSTT31cb28 = 2a5fDBordeaux BlackF00000020000001900001
%    MSTT31cb35 = 2a5fDTimes New RomanF0000000f000001900000
%    MSTT31cb42 = 2a5fDKroneF00000032000001900001
%    MSTT31cb4d = 2a5fDArialF0000002c000002bc0000
%    MSTT31cb58 = 2a5fDTimes New RomanF00000012000001900000
%    MSTT31cb65 = 2a5fDCourier NewF00000032000001900000
%    MSTT31cb71 = 2a5fDTimes New RomanF00000021000002bc0000
%    MSTT31cb7e = 2a5fDMinstrelF0000002e000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
