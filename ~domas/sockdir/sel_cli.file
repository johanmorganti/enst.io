/**** A utiliser avec le serveur gerant des select **/

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <stdio.h>


main(argc, argv)
     int argc;
     char **argv;
{

static char MESSAGE[] = "\tMessage emis par                              ";
struct sockaddr_in	s_serveur;/* description du socket du serveur */
int			sock;	  /* descripteur du socket local*/
int                     Long = 12;
struct hostent	*m_cible;	  /* description de la machine cible */

char Nom_Local [12];
extern struct hostent	*gethostbyname();

if (argc != 3)
	{
	printf("Utilisation: %s machine_cible num_port\n", argv[0]);
	exit(1);
	}
  
/* creation de la socket pour envoyer un texte  vers le serveur */
if ((sock = socket(AF_INET, SOCK_DGRAM, 0)) < 0)
	{
	perror("Ouverture du socket client");
	exit(1);
	} 

/* initialisation du nom du socket  serveur  */
if ((m_cible = gethostbyname(argv[1])) == (struct hostent *)0)
	{
	printf("%s: machine cible inconnue\n", argv[1]);
	exit(2);
	}

memcpy(&s_serveur.sin_addr, m_cible->h_addr, m_cible->h_length);
s_serveur.sin_family = AF_INET;
s_serveur.sin_port   = htons(atoi(argv[2]));

gethostname (Nom_Local, Long);
sprintf (MESSAGE+20," pid %d sur %s", getpid(), Nom_Local );

while(1) {
if (sendto(sock, ... , strlen(... ), 0, ... , sizeof(s_serveur)   ) < 0)
	{
	perror("Ecriture sur socket serveur");
	}
printf("Envoi de datagramme vers %s\n", argv[1]);

	sleep(5);
	}
close(sock);

}
  
